<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-06-01T10:48:08-07:00</updated><id>//</id><title type="html">Lance's quips and quibbles</title><subtitle>Random thoughts and occasionally useful articles from Lance Leonard, a technical  writer, programmer, and problem solver currently located somewhere near Seattle,  WA (USA).
</subtitle><entry><title type="html">Cleaning up a git master mistake</title><link href="/post/2017/03/08/cleaning-up-a-master-mistake.html" rel="alternate" type="text/html" title="Cleaning up a git master mistake" /><published>2017-03-08T00:00:00-08:00</published><updated>2017-03-08T00:00:00-08:00</updated><id>/post/2017/03/08/cleaning-up-a-master-mistake</id><content type="html" xml:base="/post/2017/03/08/cleaning-up-a-master-mistake.html">&lt;p&gt;Git is an &lt;em&gt;interesting&lt;/em&gt; version control system, one that enables workflows not possible with earlier version control systems.  However, there are days I wish it was less… Powerful?  Cryptic?  Unfathomable?  Irritating?  (Too far?)&lt;/p&gt;

&lt;p&gt;I'm not entirely sure how it happened, but I recently realized my local master repository had somehow gotten ahead of origin/master, the  authoritative version of a repository.  (I'm sure I did something without realizing it.)&lt;/p&gt;

&lt;p&gt;Now, I don't work in master.  Usually, I create individual branches and submit pull requests (PRs) when a work item is complete.  Each PR is reviewed and approved before being merged.  (At least, that's the workflow for this particular project.)&lt;/p&gt;

&lt;p&gt;I noticed new pull requests for my individual branches included commits from other branches, generally branches associated with PRs still under review.  Unfortunately, I've been busy this week and checked in quite a few pull requests before noticing the problem.&lt;/p&gt;

&lt;p&gt;Ideally, each branch contains just the commits appropriate for the underlying work item.  I needed to update each problematic PR branch.&lt;/p&gt;

&lt;p&gt;Here's what I did:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;For each affected pull request, create a new pull request containing just the intended commit.&lt;/li&gt;
  &lt;li&gt;Once all affected branches have been replaced, reset master to origin/master to avoid on-going problems.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;resetting-and-replacing-pull-requests&quot;&gt;Resetting and replacing pull requests&lt;/h2&gt;

&lt;p&gt;You can't simply &lt;em&gt;remove&lt;/em&gt; commits from a pull request.  Instead, create a new branch, reset it to origin/master, and then cherry-pick the commit(s) you want the branch to track.&lt;/p&gt;

&lt;p&gt;Here's how it works:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Determine (and save) the ID for the commit you want to keep:&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout broken-branch 
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;In my case, the commit ID was the first commit in each log.  Your needs likely vary.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create and checkout a new branch.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout -b broken-branch-upd
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;&lt;em&gt;Tip:&lt;/em&gt; I base the new name on the old branch name (ex: &lt;code class=&quot;highlighter-rouge&quot;&gt;broken-branch-upd&lt;/code&gt;) for continuity.  I also leave relevant comments on each PR explaining the situation while pointing to the other PR.  This creates an audit trail in case someone down the line wonders what the heck I was doing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reset the new branch to origin/master.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git fetch origin master
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset --hard origin/master
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;If you receive a &lt;code class=&quot;highlighter-rouge&quot;&gt;Fatal: could not read from remote repository&lt;/code&gt; error while trying fetch origin master, it's likely one of the following:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;You've mistyped &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;; verify that the remote origin is specified correctly.&lt;/li&gt;
      &lt;li&gt;The current working directory isn't part of origin/master.  In this case, change to an appropriate directory and try again.&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cherry-pick the desired commit(s) from the original pull request.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git cherry-pick saved-commit-id
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Review and verify your local files.  When satisfied, push your changes to Github:&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin broken-branch-upd:broken-branch-upd
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At this point, you can create a new pull request (which should be blissfully free from other commits) and delete the original one.  Don't forget to delete the branches.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you're planning to add additional commits to the new PR, push a small edit to one of the files in scope of the PR.  This may trigger the upstream warning that appears when local branches aren't tracked remotely. If the warning appears, use the prompt text to track your local branch.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git push --set-upstream origin broken-branch-upd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Do so now to avoid future surprises and head-scratching.&lt;/p&gt;

&lt;h2 id=&quot;resetting-and-replacing-pull-requests-1&quot;&gt;Resetting and replacing pull requests&lt;/h2&gt;

&lt;p&gt;Once the PRs are all straightened out, you'll want to resolve the differences between your local master and origin.&lt;/p&gt;

&lt;p&gt;First, check out master, &lt;a href=&quot;http://stackoverflow.com/questions/822811/showing-which-files-have-changed-between-two-revisions&quot;&gt;investigate the differences&lt;/a&gt;, and resolve them.  (I was lucky; each difference was a commit represented in a different PR.)&lt;/p&gt;

&lt;p&gt;Once you've accounted for the differences, reset master to origin:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git checkout master
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git fetch origin master
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git reset --hard origin/master
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git status
On branch master
Your branch is up to date with &lt;span class=&quot;s1&quot;&gt;'origin/master'&lt;/span&gt;.
nothing to commit, working tree clean
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, you're ready to return to your regularly developed workflow.&lt;/p&gt;

&lt;h2 id=&quot;vital-statistics&quot;&gt;Vital statistics&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Last tested:&lt;/em&gt; 8 March 2017 using git 2.10.1, MacOS Sierra 10.12.3&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Source:&lt;/em&gt; Derived from &lt;a href=&quot;http://stackoverflow.com/questions/25955822/git-cherry-pick-a-single-commit-for-pull-request&quot;&gt;Stack Overflow Q# 25955822&lt;/a&gt;.  My mileage varied, so I wrote this up and added my commentary.&lt;/p&gt;</content><author><name>Lance Leonard</name></author><category term="git," /><category term="GitHub," /><category term="master," /><category term="reset," /><category term="cherry-pick," /><summary type="html">Git is an interesting version control system, one that enables workflows not possible with earlier version control systems.  However, there are days I wish it was less… Powerful?  Cryptic?  Unfathomable?  Irritating?  (Too far?)</summary></entry><entry><title type="html">Creating Node.js modules</title><link href="/post/2017/02/12/creating-node-modules.html" rel="alternate" type="text/html" title="Creating Node.js modules" /><published>2017-02-12T00:00:00-08:00</published><updated>2017-02-12T00:00:00-08:00</updated><id>/post/2017/02/12/creating-node-modules</id><content type="html" xml:base="/post/2017/02/12/creating-node-modules.html">&lt;p&gt;Recently, I showed one way to use Node.js to &lt;a href=&quot;http://lanceleonard.com/post/2017/02/04/collecting_filenames_with_nodejs.html&quot;&gt;collect filenames from a directory&lt;/a&gt; and its child directories.  I described the technique as fundamental to various cleanup scripts.  Such routines should be collected into reusable libraries (or modules, to use Node terminology).  By doing so, you reduce maintenance, improve readability, and keep things organized.&lt;/p&gt;

&lt;p&gt;This post shows how to create and use a custom module in Node.js.&lt;/p&gt;

&lt;p&gt;Node.js module design is based on &lt;a href=&quot;http://www.commonjs.org/specs/modules/1.0/&quot;&gt;CommonJS module specification&lt;/a&gt;, though sources vary on the &lt;a href=&quot;https://en.wikipedia.org/wiki/CommonJS&quot;&gt;intent&lt;/a&gt; and &lt;a href=&quot;http://www.requirejs.org/docs/commonjs.html&quot;&gt;history&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To begin, move the reusable functions to a separate JavaScript file (called &lt;code class=&quot;highlighter-rouge&quot;&gt;mymodules.js&lt;/code&gt; in this example):&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// myModule.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isBlank&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputValue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blnResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
                     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; 
                     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blnResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collectFilenames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strTargetPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strTargetPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sCurrDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xDir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aThisDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readdirSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sCurrDir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xThisFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xThisFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aThisDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xThisFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

         &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sCurrDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aThisDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xThisFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
         &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xTFStat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xTFStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xTFStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Skipping &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                         &lt;span class=&quot;s2&quot;&gt;&quot;; not a file or directory.&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You might have noticed that &lt;code class=&quot;highlighter-rouge&quot;&gt;collectFilenames&lt;/code&gt; returns an array of strings in this version, rather than the object from the earlier post.  That's a stylistic choice.  I tend to limit return types to simple data types; I find this reduces problems in different clients (especially older ones).  You'll notice I also limit the syntactical shortcuts for pretty much the same reason.  I find this makes subtle errors easier to locate and results in clear, concise code.&lt;/p&gt;

&lt;p&gt;Notice that the function declarations have changed.  For websites, standalone JavaScript libraries are usually pulled into a webpage with the  &lt;code class=&quot;highlighter-rouge&quot;&gt;script src=&quot;...&quot;&lt;/code&gt; statement.  Such libraries usually shareable routines as functions:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isBlank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputValue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;collectFilenames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strTargetPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When creating node modules, you assign functions to the &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt; object.  Thus, your traditional function calls become:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isBlank&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputValue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collectFilenames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strTargetPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As of &lt;a href=&quot;https://nodejs.org/dist/latest-v7.x/docs/api/modules.html#modules_exports_shortcut&quot;&gt;Node v0.1.16&lt;/a&gt;, the &lt;code class=&quot;highlighter-rouge&quot;&gt;module&lt;/code&gt; reference is optional for exports defined in the same file.&lt;/p&gt;

&lt;p&gt;With the module in place, the calling code can be rewritten:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nbt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./myModule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fs&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nbt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isBlank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Declaration error: Cleanup directory not specified.&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aFilenames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;aFilenames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nbt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collectFilenames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aFilenames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What remains is generally focused on the specific task.&lt;/p&gt;

&lt;p&gt;Note: If you receive an &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Error: Cannot find module 'example'&lt;/code&gt; error when you &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; your module, try adding a directory reference:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nbt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./myModule&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This example, assumes &lt;code class=&quot;highlighter-rouge&quot;&gt;myModule&lt;/code&gt; is located in the same directory as the calling module.  Adjust as needed to reflect your application structure.&lt;/p&gt;

&lt;p&gt;In a future post, we'll explore some interesting design considerations that might affect the way you export module functions.&lt;/p&gt;

&lt;p&gt;More info:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Node's full &lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;module documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.commonjs.org/specs/modules/1.0/&quot;&gt;CommonJS module specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;npm's &lt;a href=&quot;https://docs.npmjs.com/getting-started/creating-node-modules&quot;&gt;Creating Node.js Modules&lt;/a&gt; tutorial.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://openmymind.net/2012/2/3/Node-Require-and-Exports/&quot;&gt;Node.js, Require, and Exports&lt;/a&gt;, by Karl Seguin.&lt;/li&gt;
  &lt;li&gt;How to Node: &lt;a href=&quot;https://howtonode.org/creating-custom-modules&quot;&gt;Creating Custom Modules&lt;/a&gt;, by Tim Craswell.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vital stats:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First published: 12 Feb 2017.&lt;/li&gt;
  &lt;li&gt;Verified using Node.js, v7.4.0.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Lance Leonard</name></author><category term="node.js," /><category term="javascript," /><category term="modules," /><category term="reuse" /><summary type="html">Recently, I showed one way to use Node.js to collect filenames from a directory and its child directories.  I described the technique as fundamental to various cleanup scripts.  Such routines should be collected into reusable libraries (or modules, to use Node terminology).  By doing so, you reduce maintenance, improve readability, and keep things organized.</summary></entry><entry><title type="html">Collecting filenames with Node.js</title><link href="/post/2017/02/04/collecting_filenames_with_nodejs.html" rel="alternate" type="text/html" title="Collecting filenames with Node.js" /><published>2017-02-04T00:00:00-08:00</published><updated>2017-02-04T00:00:00-08:00</updated><id>/post/2017/02/04/collecting_filenames_with_nodejs</id><content type="html" xml:base="/post/2017/02/04/collecting_filenames_with_nodejs.html">&lt;p&gt;When creating content experiences, I like to use Node.js for light housekeeping, by which I mean little chores that streamline the process.  Things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Detecting files added to (or removed from) source repositories.&lt;/li&gt;
  &lt;li&gt;Parsing TOC (&lt;em&gt;table of contents&lt;/em&gt;) index files to stage pages to the right places.&lt;/li&gt;
  &lt;li&gt;Repairing broken comment markup prior to generating reference pages.&lt;/li&gt;
  &lt;li&gt;Repairing broken content spit out by reference page generators.&lt;/li&gt;
  &lt;li&gt;Updating configuration files for build scripts and tools (e.g. Apache ant).&lt;/li&gt;
  &lt;li&gt;Generating index pages, tag clouds, and other supporting content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These tasks frequently require a list of files located in a particular directory and its child directories.  Here's one way to develop such a list:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// very basic command line handling.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; 
     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Declaration error: Target folder not specified.&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Normalize and verify the input parameter value&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fs&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathStat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Declaration error: '&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
                &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;' is not a folder.&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Prepare the result object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFilePath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Scan every folder found; make sure we can them all&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sCurrDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xDir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aThisDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readdirSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sCurrDir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xThisFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xThisFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aThisDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xThisFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

     &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sCurrDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aThisDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xThisFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xTFStat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xTFStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xTFStat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Skipping &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strFullFilename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;; not a file or folder.&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This example verifies the parameter value supplied by the caller.  Unless a valid directory is provided, an error appears and the script ends.&lt;/p&gt;

&lt;p&gt;The target directory is scanned and each file tested.  Individual filenames are added to the &lt;code class=&quot;highlighter-rouge&quot;&gt;files&lt;/code&gt; property array and child directories are added the &lt;code class=&quot;highlighter-rouge&quot;&gt;paths&lt;/code&gt; property array.  Because the outer loop relies on &lt;code class=&quot;highlighter-rouge&quot;&gt;paths&lt;/code&gt;, child directories are processed.&lt;/p&gt;

&lt;p&gt;You'll notice the file evaluation block includes an &lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt; for unexpected results.&lt;/p&gt;

&lt;p&gt;When the outer loop completes, the &lt;code class=&quot;highlighter-rouge&quot;&gt;oResults&lt;/code&gt; object is ready for the next step.&lt;/p&gt;

&lt;p&gt;Mind you, there are easier ways to generate a list of files, including a simple shell command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find ~/projects/mydocsite/_site -name &lt;span class=&quot;s2&quot;&gt;&quot;*.html&quot;&lt;/span&gt; &amp;gt; filelist.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If that's all you need, the shell command is obviously the better choice. However, if you have more complicated processing in mind, Node's value becomes more apparent.  We'll come back to this in future posts.&lt;/p&gt;

&lt;h2 id=&quot;vital-stats&quot;&gt;Vital stats&lt;/h2&gt;

&lt;p&gt;First posted: 4 February 2017; tested using Node.js v7.4.0.&lt;/p&gt;</content><author><name>Lance Leonard</name></author><category term="node.js" /><category term="javascript" /><category term="file" /><summary type="html">When creating content experiences, I like to use Node.js for light housekeeping, by which I mean little chores that streamline the process.  Things like:</summary></entry><entry><title type="html">Editorial resources for writers, editors, and wearers of multiple hats.</title><link href="/post/2017/01/30/editorial_writing_resources.html" rel="alternate" type="text/html" title="Editorial resources for writers, editors, and wearers of multiple hats." /><published>2017-01-30T00:00:00-08:00</published><updated>2017-01-30T00:00:00-08:00</updated><id>/post/2017/01/30/editorial_writing_resources</id><content type="html" xml:base="/post/2017/01/30/editorial_writing_resources.html">&lt;p&gt;I recently asked an online content group for links to &quot;style guides.&quot;  There were several responses, including many links to &quot;design guides,&quot; as in guidelines for interface design: layout, colors, fonts, and so on.  Interesting stuff to be sure, but not precisely what I was looking for.&lt;/p&gt;

&lt;p&gt;I was looking for &lt;em&gt;editorial&lt;/em&gt; style guides, such as &lt;em&gt;The Chicago Manual of Style&lt;/em&gt; (CMoS), &lt;em&gt;AP Stylebook&lt;/em&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_style_guides&quot;&gt;and so on&lt;/a&gt;.  Not that these aren't excellent resources, but if you're on a budget (as I was), you might be interested in freely available resources.&lt;/p&gt;

&lt;p&gt;If you're interested in editorial style guides, here's what I've gathered so far:&lt;/p&gt;

&lt;h2 id=&quot;editorial-style-resources&quot;&gt;Editorial style resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;18F &lt;a href=&quot;https://pages.18f.gov/content-guide/&quot;&gt;Content Guide&lt;/a&gt;: A &quot;clear writing&quot; resource.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;American Physiological Society (APS) &lt;a href=&quot;http://www.apsstylemanual.org/&quot;&gt;Manual of Style&lt;/a&gt;.  An &lt;a href=&quot;http://www.apsstylemanual.org/oldmanual/index.htm&quot;&gt;earlier version&lt;/a&gt; is also available and worth reviewing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://apvschicago.com&quot;&gt;AP vs Chicago&lt;/a&gt; compares differences between the &lt;em&gt;AP Stylebook&lt;/em&gt; and the &lt;em&gt;Chicago Manual of Style&lt;/em&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://help.apple.com/applestyleguide&quot;&gt;Apple Style Guide&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.grammarbook.com/&quot;&gt;Blue Book of Grammar&lt;/a&gt;:  Extensive, but a bit hard to read.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Chicago &lt;a href=&quot;http://www.chicagomanualofstyle.org&quot;&gt;Manual of Style Online&lt;/a&gt;: Subscription required, but search occasionally returns useful tidbits.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.dailywritingtips.com/size-matters/&quot;&gt;Daily Writing Tips&lt;/a&gt; offers advice for common (and uncommon) writing questions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dojo (JavaScript library) &lt;a href=&quot;http://dojotoolkit.org/reference-guide/1.10/developer/styleguide.html#developer-styleguide&quot;&gt;documentation style&lt;/a&gt; guide.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.phrases.org.uk/&quot;&gt;English Phrases&lt;/a&gt; explains the meaning and origins of common phrases and iodoms. (UK).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Google's &lt;a href=&quot;https://developers.google.com/style&quot;&gt;Developer Documentation&lt;/a&gt; Style Guide.  For user experience (UX) guidelines, see their &lt;a href=&quot;https://material.io/guidelines/style/writing.html&quot;&gt;Material Style Guide&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.grammarcheck.net&quot;&gt;GrammarCheck.net&lt;/a&gt; provides helpful infographics and grammar review.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Microsoft &lt;a href=&quot;https://docs.microsoft.com/style-guide/welcome&quot;&gt;Writing Style Guide&lt;/a&gt; represents the latest ideas and practices used in docs.microsoft.com; it supersedes and replaces the &lt;em&gt;Microsoft Manual of Style&lt;/em&gt; (MMoS) and the &lt;em&gt;Microsoft Guide to Technical Publications&lt;/em&gt; (MSTP).  If you're familiar with the earlier works, take time to review the new guidelines.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Microsoft &lt;a href=&quot;https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md&quot;&gt;REST API Guidelines&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;National Archives (NARA) - Principles for &lt;a href=&quot;http://www.archives.gov/open/plain-writing/10-principles.html&quot;&gt;Plain Language&lt;/a&gt; and &lt;a href=&quot;https://www.archives.gov/files/open/plain-writing/style-guide.pdf&quot;&gt;Style Guide (PDF)&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Perdue University &lt;a href=&quot;https://owl.english.purdue.edu/owl/&quot;&gt;Online Writing Library (OWL)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.thepunctuationguide.com/index.html&quot;&gt;The Punctuation Guide&lt;/a&gt;: An interesting interface, but a bit light on content.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://rackerlabs.github.io/docs-rackspace/style-guide/basic-writing-guidelines.html&quot;&gt;Rackspace Documentation Guide&lt;/a&gt; offers sage advice while breaking a other few rules.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Salesforce Documentation &lt;a href=&quot;https://developer.salesforce.com/docs/atlas.en-us.salesforce_pubs_style_guide.meta/salesforce_pubs_style_guide/overview.htm&quot;&gt;Style Guide&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Washington State University's &lt;a href=&quot;http://public.wsu.edu/~brians/errors/errors.html#errors&quot;&gt;Common English Errors&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://writingexplained.org/&quot;&gt;Writing Explained&lt;/a&gt; is a very interesting resource that combines information from multiple sources, including summarizing rules from &lt;em&gt;the Chicago Manual of Style&lt;/em&gt;, &lt;em&gt;AP Stylebook&lt;/em&gt;, and other sources.  Highly recommended.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;editorials-and-guidance-from-other-technical-writers&quot;&gt;Editorials and guidance from other technical writers:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;James Cooke: &lt;a href=&quot;http://jamescooke.info/api-documentation-and-the-communication-illusion.html&quot;&gt;The Communication Illusion&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;James Cooke: REST API &lt;a href=&quot;https://github.com/jamescooke/restapidocs&quot;&gt;documentation templates&lt;/a&gt; in Markdown.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tom Johnson introduces &lt;a href=&quot;http://idratherbewriting.com/2017/01/25/hyperste-simplified-technical-english-asd-ste100/&quot;&gt;Simplified Technical English&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sean Madsen's &lt;a href=&quot;https://github.com/seanmadsen/elegant-docs&quot;&gt;Elegant Documentation Principles&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bob Reselman's &lt;a href=&quot;http://www.developer.com/tech/article.php/3848981/The-7-Rules-for-Writing-World-Class-Technical-Documentation.htm&quot;&gt;7 rules for creating world class docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have other resources, please feel free to share them.  I'll update these lists from time to time.&lt;/p&gt;

&lt;h2 id=&quot;revision-history&quot;&gt;Revision History&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;6 May 2018: Reviewing and updating.&lt;/li&gt;
  &lt;li&gt;8 Mar 2017: Synchronizing with latest updates.&lt;/li&gt;
  &lt;li&gt;7 Feb 2017: Adding &quot;Writing Explained&quot; and reworking resource presentation.&lt;/li&gt;
  &lt;li&gt;31 Jan 2017: Adding &quot;Elegant Document Principles,&quot; fixing typos, and fleshing out attributions.&lt;/li&gt;
  &lt;li&gt;30 Jan 2017: Original post.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Lance Leonard</name></author><category term="post" /><category term="editorial" /><category term="style" /><category term="guide" /><category term="grammar" /><category term="resources" /><summary type="html">I recently asked an online content group for links to &quot;style guides.&quot;  There were several responses, including many links to &quot;design guides,&quot; as in guidelines for interface design: layout, colors, fonts, and so on.  Interesting stuff to be sure, but not precisely what I was looking for.</summary></entry><entry><title type="html">Converting XML to JSON using Node.js</title><link href="/post/2017/01/29/node-convert-xml-json.html" rel="alternate" type="text/html" title="Converting XML to JSON using Node.js" /><published>2017-01-29T00:00:00-08:00</published><updated>2017-01-29T00:00:00-08:00</updated><id>/post/2017/01/29/node-convert-xml-json</id><content type="html" xml:base="/post/2017/01/29/node-convert-xml-json.html">&lt;p&gt;There are many ways to use node.js to convert XML to JSON.  To date, one of the simplest involves an &lt;a href=&quot;https://www.npmjs.com/package/xml2js&quot;&gt;npm module called &lt;code class=&quot;highlighter-rouge&quot;&gt;xml2js&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The basic wrapper code is:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x2j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xml2js'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sInputFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;books.xml;&quot;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x2j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sXMLData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sInputFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'utf8'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parseString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sXMLData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Result&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;\n&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Here, the input file (&lt;code class=&quot;highlighter-rouge&quot;&gt;books.xml&lt;/code&gt;) is read into a string variable and then parsed.  The result is passed to an anonymous function that formats it before printing it to the console.&lt;/p&gt;

&lt;p&gt;When XML elements contain attributes, this version creates an attribute object named &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; on the parent and then assigns the values as children of the attribute object.  To place attributes as direct children of the parent object (without the intervening &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; object), set the &lt;code class=&quot;highlighter-rouge&quot;&gt;mergeAttrs&lt;/code&gt; option to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; when declaring the parser:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x2j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mergeAttrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To learn more, see &lt;a href=&quot;https://www.npmjs.com/package/xml2js&quot;&gt;the documentation&lt;/a&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;xml2js&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;vital-stats&quot;&gt;Vital Stats&lt;/h2&gt;
&lt;p&gt;Lasted tested January 2017: node v7.4.0, npm v4.0.5, xml2js v0.4.17, and MacOS 10.12.3&lt;/p&gt;

&lt;h2 id=&quot;revision-history&quot;&gt;Revision History&lt;/h2&gt;

&lt;p&gt;29 Jan 2017: Original post.&lt;/p&gt;</content><author><name>Lance Leonard</name></author><category term="post" /><category term="node" /><category term="javascript" /><category term="xml" /><category term="json" /><summary type="html">There are many ways to use node.js to convert XML to JSON.  To date, one of the simplest involves an npm module called xml2js.</summary></entry><entry><title type="html">Word 2011 tips and reminders</title><link href="/post/2017/01/28/word-2011-reminders.html" rel="alternate" type="text/html" title="Word 2011 tips and reminders" /><published>2017-01-28T00:00:00-08:00</published><updated>2017-01-28T00:00:00-08:00</updated><id>/post/2017/01/28/word-2011-reminders</id><content type="html" xml:base="/post/2017/01/28/word-2011-reminders.html">&lt;p&gt;Word 2011 for the Mac is finally obsolete, having been replaced by Word 2016 for the Mac.  Up until a couple of years ago, I worked exclusively with Windows and hadn't thought of earlier versions of Word in some time.  When handed my first Mac, however, I quickly learned that the venerable Word 2011 was the &lt;em&gt;latest&lt;/em&gt; available for the OS and that it featured some, ah, &lt;em&gt;eccentric&lt;/em&gt; behavior.&lt;/p&gt;

&lt;p&gt;Here are a few tips I learned while waiting for the update:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If the tabs don't respond to mouse clicks, try clicking the very top pixel of the tab (or as close to it as you can manage.)  Yeah, I know.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To fix the &quot;A footer of section &lt;em&gt;x&lt;/em&gt; is set outside the printable area of this page&quot; error, you need to change the header (or footer) to be larger than the non-printable area of the page.  To do this:&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;Select the Header and Footer tab.&lt;/li&gt;
      &lt;li&gt;In Position, set the &quot;Header from Top&quot; and &quot;Footer from Bottom&quot; fields to appropriate values.  If you're unsure, try &lt;code class=&quot;highlighter-rouge&quot;&gt;0.5&lt;/code&gt;.  (The actual minimum value changes from printer to printer.)&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;This frequently appears in documents edited in different countries; regional page size defaults can resize page setup margins, headers, and footers beyond expected ranges.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Want to update a the table of contents?  Move focus to the generated table of contents and then press &lt;kbd&gt; F9 &lt;/kbd&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Revision marks consume a &lt;em&gt;lot&lt;/em&gt; of memory.  If the document is taking a very long time to render or navigate, consider clearing previous revision marks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When transferring files between different countries, regions, and languages, use care to verify the Page Setup and Default Language settings before printing or redistributing the document.  The angst you save may be your own.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The following keyboard shortcuts help manage list and paragraph indents:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Promote bullet one level (move right): [&lt;code class=&quot;highlighter-rouge&quot;&gt;Shift&lt;/code&gt;] + [&lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt;] + [&lt;code class=&quot;highlighter-rouge&quot;&gt;Right arrow&lt;/code&gt;]&lt;/li&gt;
      &lt;li&gt;Demote bullet one level (move left): [&lt;code class=&quot;highlighter-rouge&quot;&gt;Shift&lt;/code&gt;] + [&lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt;] + [&lt;code class=&quot;highlighter-rouge&quot;&gt;Left arrow&lt;/code&gt;]&lt;/li&gt;
      &lt;li&gt;Indent paragraph one tab stop (move right): [&lt;code class=&quot;highlighter-rouge&quot;&gt;Control&lt;/code&gt;] + [&lt;code class=&quot;highlighter-rouge&quot;&gt;Shift&lt;/code&gt;] + [&lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt;]&lt;/li&gt;
      &lt;li&gt;Unindent paragraph one tab stop (move left): [&lt;code class=&quot;highlighter-rouge&quot;&gt;Shift&lt;/code&gt;] + [&lt;code class=&quot;highlighter-rouge&quot;&gt;Command&lt;/code&gt;] + [&lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt;]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I realize this is a bit of a grab bag; however, some folks may still be struggling to make the program behave.  If you have other tips you'd like to add to this list, let me know and I'll update things accordingly.&lt;/p&gt;

&lt;p&gt;If it's any consolation, &lt;a href=&quot;http://pandoc.org/&quot;&gt;pandoc&lt;/a&gt; is incredibly useful for converting Word documents to other formats (and back again, which is useful for fixing up hideously broken styles).  Check it out!&lt;/p&gt;

&lt;h2 id=&quot;revision-history&quot;&gt;Revision History&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;28 Jan 2017: Original post.&lt;/li&gt;
  &lt;li&gt;31 Jan 2017: Adding additional tips and fixing typos.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Lance Leonard</name></author><category term="post" /><category term="Word-2011" /><category term="Mac" /><category term="MacOS" /><category term="OSX" /><category term="Office" /><summary type="html">Word 2011 for the Mac is finally obsolete, having been replaced by Word 2016 for the Mac.  Up until a couple of years ago, I worked exclusively with Windows and hadn't thought of earlier versions of Word in some time.  When handed my first Mac, however, I quickly learned that the venerable Word 2011 was the latest available for the OS and that it featured some, ah, eccentric behavior.</summary></entry><entry><title type="html">Keyboard shortcuts for elevation prompts</title><link href="/post/2017/01/27/elevation-prompt-shortcuts.html" rel="alternate" type="text/html" title="Keyboard shortcuts for elevation prompts" /><published>2017-01-27T00:00:00-08:00</published><updated>2017-01-27T00:00:00-08:00</updated><id>/post/2017/01/27/elevation-prompt-shortcuts</id><content type="html" xml:base="/post/2017/01/27/elevation-prompt-shortcuts.html">&lt;p&gt;Windows Vista introduced privilege elevation prompts, dialog boxes that confirm administrator level actions such as installing new software, deleting files from sensitive locations, and so on.&lt;/p&gt;

&lt;p&gt;Many find the feature annoying, which (oddly) was &lt;a href=&quot;https://arstechnica.com/security/2008/04/vistas-uac-security-prompt-was-designed-to-annoy-you/&quot;&gt;the original point&lt;/a&gt;.  Personally, I appreciate the opportunity to avoid accidentally deleting an important file; however, I know this view &lt;a href=&quot;https://www.youtube.com/watch?v=FxOIebkmrqs&quot;&gt;isn't universal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I do find the elevation experience jarring—especially since I prefer trackballs over traditional mice.  When Windows displays an elevation prompt, my trackball stops responding until the prompt is handled.  (I suspect this has something to do with permissions that have not yet been properly coded into the underlying drivers or their installation process. I haven't investigated deeply.)&lt;/p&gt;

&lt;p&gt;To manage, I've come to rely on keyboard shortcuts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To quickly accept an elevation prompt, press &lt;kbd&gt;Left Arrow&lt;/kbd&gt; and then press &lt;kbd&gt;Enter&lt;/kbd&gt;.&lt;/li&gt;
  &lt;li&gt;To cancel, press &lt;kbd&gt;Esc&lt;/kbd&gt;.&lt;/li&gt;
  &lt;li&gt;You can continue many elevation prompts by pressing &lt;kbd&gt;Spacebar&lt;/kbd&gt;.  (In my experience, support varies in different Windows versions.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've found the &lt;kbd&gt;Left Arrow&lt;/kbd&gt; + &lt;kbd&gt;Enter&lt;/kbd&gt; shortcut consistent in every version of Windows since Vista.  Ironically, it's nearly an automatic response for me.  Since automatic responses are also inattentive responses, one wonders: was deliberate annoyance was all that effective in the long run?&lt;/p&gt;

&lt;h2 id=&quot;revision-history&quot;&gt;Revision History&lt;/h2&gt;

&lt;p&gt;27 Jan 2017: Original post.&lt;/p&gt;</content><author><name>Lance Leonard</name></author><category term="post" /><category term="windows" /><category term="elevation" /><category term="keyboard" /><category term="shortcuts" /><summary type="html">Windows Vista introduced privilege elevation prompts, dialog boxes that confirm administrator level actions such as installing new software, deleting files from sensitive locations, and so on.</summary></entry><entry><title type="html">Dictionary sorting in JavaScript</title><link href="/article/2017/01/26/javascript-dictionary-sorting.html" rel="alternate" type="text/html" title="Dictionary sorting in JavaScript" /><published>2017-01-26T00:00:00-08:00</published><updated>2017-01-26T00:00:00-08:00</updated><id>/article/2017/01/26/javascript-dictionary-sorting</id><content type="html" xml:base="/article/2017/01/26/javascript-dictionary-sorting.html">&lt;p&gt;&lt;em&gt;&quot;There is always a well-known solution to every human problem–neat, plausible, and wrong.&quot;&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;– H.L. Menken.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you've ever gathered requirements, reviewed change requests, or even handled support tickets, you've probably seen cases where a proposed solution did not resolve the user's need. Learn to recognize the true need underlying a request so you can create solutions that actually solve problems.&lt;/p&gt;

&lt;p&gt;To illustrate, consider the following book titles:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A Study in Scarlet
The Sign of Four
The Adventures of Sherlock Holmes
The Memoirs of Sherlock Holmes
The Hound of the Baskervilles
The Return of Sherlock Holmes
His Last Bow
The Valley of Fear
The Case-Book of Sherlock Holmes
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Suppose these are stored in an array and you've been asked to print the titles with JavaScript:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;astrTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
       &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;astrTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;writeTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, the &lt;em&gt;writeTitle()&lt;/em&gt; function represents whatever display technique is appropriate for your use (&lt;a href=&quot;https://jsfiddle.net/lleonard/b45xzgau/&quot;&gt;example #1&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Your code might vary, but the underlying approach would likely be similar. You'd loop through the array and print each element value. (It's worth noting that the initial order roughly corresponds to original publication order of these titles.)&lt;/p&gt;

&lt;p&gt;Now, suppose your users ask you to print the titles alphabetically.  To do so, you might use (&lt;a href=&quot;https://jsfiddle.net/lleonard/74yfbthu/&quot;&gt;example #2&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;astrTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
       &lt;span class=&quot;nx&quot;&gt;astrTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;writeTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;astrTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This leads to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A Study in Scarlet
His Last Bow
The Adventures of Sherlock Holmes
The Case-Book of Sherlock Holmes
The Hound of the Baskervilles
The Memoirs of Sherlock Holmes
The Return of Sherlock Holmes
The Sign of Four
The Valley of Fear
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sorting the values is the obvious, simplest answer.  Is it the correct answer?  Not really; it addresses the request, but not the need. This version uses the entire string value to determine sort order.  However, there's a difference between alphabetic sorting and dictionary sorting (which ignores leading articles). In dictionary sorting, &quot;A Study in Scarlet&quot; appears after &quot;The Sign of Four.&quot; The need, then, is to use dictionary sorting rather than strict alphabetic sorting.&lt;/p&gt;

&lt;p&gt;In earlier times, libraries handled this by moving leading articles to the end of the title, as in &quot;Study in Scarlet, A&quot;, &quot;Sign of Four, The&quot;, and so on.&lt;/p&gt;

&lt;p&gt;You &lt;em&gt;could&lt;/em&gt; follow the same convention by modifying the data values accordingly:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;Adventures of Sherlock Holmes, The&quot;
&quot;Case-Book of Sherlock Holmes, The&quot;
&quot;His Last Bow&quot;
&quot;Hound of the Baskervilles, The&quot;
&quot;Memoirs of Sherlock Holmes, The&quot;
&quot;Return of Sherlock Holmes, The&quot;
&quot;Sign of Four, The&quot;
&quot;Study in Scarlet, A&quot;
&quot;Valley of Fear, The&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This approach is simple and leads to the expected result. It's well-known, neat, and plausible. It also avoids code changes. However, the technique forces the user to adapt to the limitations of the implementation.  Worse, future features (such as search) become more difficult to implement.  There must be a better way.&lt;/p&gt;

&lt;p&gt;You might think to store separate data values: one displayed to the user and one used to sort the data. In the long run, this would be more effective than changing the data because it provides the correct order without affecting the user's experience.  However, additional costs soon become apparent. First, storage increases because of the near duplicate data values.  Second, your code now needs to synchronize both values when the data changes.&lt;/p&gt;

&lt;p&gt;(Contrary to expectation, book titles can change over time.  &quot;The Sign of Four&quot; was originally published as &quot;The Sign of The Four&quot; and there's an &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Sign_of_the_Four#Publishing_history&quot;&gt;open debate&lt;/a&gt; as to which title is the correct one.)&lt;/p&gt;

&lt;p&gt;Fortunately, JavaScript provides a better way, one that slightly increases the code without duplicating the data or breaking the user's experience (&lt;a href=&quot;https://jsfiddle.net/lleonard/t3qmvxj8/&quot;&gt;example #3&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moveLeadingArticle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sInput&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLocaleLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
       &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aArticles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'an'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'the'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
       &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aArticles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;sResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;sResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;', '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;   
       &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;astrTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aResultsArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       
          &lt;span class=&quot;nx&quot;&gt;aResultsArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SortTermA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moveLeadingArticle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SortTermB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moveLeadingArticle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SortTermA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localeCompare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SortTermB&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

       &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTotal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;writeTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;astrTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iTitles&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, the &lt;em&gt;moveLeadingArticle()&lt;/em&gt; function uses a regular expression to detect and move leading articles to the end of a title.  The sorting code uses an anonymous function to override the built-in sort algorithm with one using the new function.  These changes incorporate the librarian's trick without affecting the underlying data or the user's experience.&lt;/p&gt;

&lt;p&gt;This provided the expected results:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    The Adventures of Sherlock Holmes
    The Case-Book of Sherlock Holmes
    His Last Bow
    The Hound of the Baskervilles
    The Memoirs of Sherlock Holmes
    The Return of Sherlock Holmes
    The Sign of Four
    A Study in Scarlet
    The Valley of Fear
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This solution meets the user's need without adversely affecting their experience, without requiring changes to the data, and without complicating future feature requests.  This is the right answer.&lt;/p&gt;

&lt;p&gt;Your users are unlikely to notice the additional effort put into your final solution. That's fine; it really is. The satisfaction of programming comes, in part, from correctly meeting user needs, even when the implementation needs a little more work than originally expected.&lt;/p&gt;

&lt;h2 id=&quot;revision-history&quot;&gt;Revision History&lt;/h2&gt;

&lt;p&gt;26 Jan 2017: Original post.&lt;/p&gt;</content><author><name>Lance Leonard</name></author><category term="article" /><category term="javascript" /><category term="sorting" /><summary type="html">&quot;There is always a well-known solution to every human problem–neat, plausible, and wrong.&quot;
– H.L. Menken.</summary></entry><entry><title type="html">First post: don't panic</title><link href="/post/2017/01/25/first-post-dont-panic.html" rel="alternate" type="text/html" title="First post: don't panic" /><published>2017-01-25T00:00:00-08:00</published><updated>2017-01-25T00:00:00-08:00</updated><id>/post/2017/01/25/first-post-dont-panic</id><content type="html" xml:base="/post/2017/01/25/first-post-dont-panic.html">&lt;p&gt;Choose your greeting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hail and well met!&lt;/li&gt;
  &lt;li&gt;Greetings, lifeform.&lt;/li&gt;
  &lt;li&gt;Goooood Eeeeevvvening.&lt;/li&gt;
  &lt;li&gt;Hello troubleshooter.&lt;/li&gt;
  &lt;li&gt;Buh-doop beep?  BLAAAT!&lt;/li&gt;
  &lt;li&gt;Oh.  It's &lt;em&gt;you&lt;/em&gt;.  It's been a &lt;em&gt;looong&lt;/em&gt; time.  How've you been?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After many promises, multiple unfinished prototypes, and much pondering, it's finally online.  The site, I mean.&lt;/p&gt;

&lt;p&gt;Here, you'll find technical articles and posts related to things I'm working on, lessons I've learned, solutions I've found, and other thoughts I thought worth sharing.  Feel free to browse, but I do ask that shenanigans be kept to a minimum…unless, of course, I'm allowed to be rambunctious as well. In that event, well, it's off to the races… (off to the races…)&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;/about&quot;&gt;About the site&lt;/a&gt; for the rules (such as they are).&lt;/p&gt;

&lt;p&gt;Things are a bit sparse at the moment, but that's because I'm still pulling things together.&lt;/p&gt;

&lt;p&gt;For the near future, I'm keeping it simple.  Eventually, I'll need to complicate things a bit, but hopefully not too much.  I generally follow a light, bloggy style…except when I don't.  When there's enough content to make it worthwhile, I'll separate formal articles from informal observations and add navigation shortcuts, search, and other traditional features.&lt;/p&gt;

&lt;p&gt;Comments are not currently enabled, so you'll need to provide feedback one of the contact points on the &lt;a href=&quot;/about&quot;&gt;about page&lt;/a&gt;.  All well-intentioned feedback is appreciated.&lt;/p&gt;

&lt;p&gt;If you find anything useful, feel free to share and enjoy (share and enjoy).  Please give credit where credit is due.  You may not pinch and poach.  If something's useful, cite where you found it.  If you feel I've not cited things correctly, let me know so I can take appropriate action.&lt;/p&gt;

&lt;p&gt;Things are a bit of a mess at the moment, but the style will settle down and start telling you things you need to know.  I hope.&lt;/p&gt;

&lt;h2 id=&quot;revision-history&quot;&gt;Revision History&lt;/h2&gt;

&lt;p&gt;25 Jan 2017: Original post.&lt;/p&gt;</content><author><name>Lance Leonard</name></author><category term="post" /><category term="greetings" /><category term="introduction" /><category term="rules" /><summary type="html">Choose your greeting:</summary></entry></feed>
