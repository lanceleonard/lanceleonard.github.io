[{"body":"About my cooking I don’t consider myself much of a cook; however, I have picked up a few tricks.\nAs a single parent, for example, I taught myself how to prepare a traditional holiday dinner (roast turkey, stuffing, and so on). I felt it was important to provide my daughter with as close to a traditional experience as I could.\nMy version may not be as ambitious as some, however, it includes traditional favorites and generally gets fairly high marks.\nFor the last several years, I’ve been the primary cook (and bottle washer) for holiday meals in my family, even through a variety of detail changes.\nI enjoy cooking mainly as a way to connect and share with friends and family. I’m less keen on the effort (and cleanup) when it’s just me.\nVital statistics First post: 30 January 2025 ","categories":"","description":"I'm not a cook, but I've played one as a parent and could likely do so on TV.","excerpt":"I'm not a cook, but I've played one as a parent and could likely do so …","ref":"/scribbles/trifles/cooking/","tags":"","title":"Cooking"},{"body":"Here is an updated take on a recipe I learned in college. It’s easy to prepare (and clean up).\nIt adapts easily to various dietary restrictions and responds well to creative seasoning.\nIngredients 1 can (~15 oz) low sodium soup (the base) 1 can no salt added beans (type can vary between black, pinto, kidney, and so on) 1-2 cans no salt added vegetables (green beans, peas, carrots, etc) 1 package (~8oz) plain brown, whole grain rice, cooked per instructions Seasoning: Per taste and preference. I generally start with: 2 teaspoons onion powder 2 teaspoons garlic powder 1 teaspoon black pepper 1/2 teaspoon chili powder For best results, drain and rinse all canned ingredients.\nPreparation Cook \u0026 heat rice per directions.\nDrain and rinse canned ingredients.\nMix all ingredients in a oven-safe bowl until well blended.\nSeason to taste.\nCover and microwave to serving temperature. Time varies according to oven and taste; I generally cook for 6-7 minutes.\nServes 2-4\nComments Rinsing canned ingredients reduces overall sodium count (reportedly up to 40%), limits social consequences, and minimizes flavor impact of packing juices.\nExperiment with additional seasonings to add variety to the flavor. I’ve had good luck with taco seasoning, ginger, lemon, turmeric, and other spices (though, obviously, not at the same time).\nNutritionally, this is a fairly well-balanced dish. It’s infinitely customizable and customizations are key to the success.\nFor example, you can replace the soup with another liquid base, such as low sodium chicken stock or even water (powdered gravy can add a savory touch.)\nAdd additional ingredients to increase variety and serving count. Here are some things I’ve tried:\nA second can of beans Additional vegetables, such as a packet of riced broccoli Additional protein sources, such as no salt added tuna, chicken, or shredded beef. Fresh mushrooms or fresh tofu. (Dice to improve distribution.) Your ingredients controls the overall health profile of the dish. If you’re watching sodium, for example, total the amounts reported on your ingredient nutrition labels and then divide by the number of servings. (I’ve made versions of this for less than 200mg of sodium; your mileage will likely vary.)\nIf you’re feeling particularly daring, consider mixing in a packet of low sodium chili or a similar entree. I call this the “special” because it introduces flavors reminiscent of less healthy dishes.\nBe sure to blend everything carefully so that the mixture (and flavors) are equally distributed.\nPotassium chloride warning If you’re watching sodium, be aware that potassium chloride (KCl) is sometimes used as a salt (sodium chloride, NaCL) alternative, especially in items marketed as low sodium or salt-free. This is particularly common in foods marketed by recognized national chains.\nIf you’re watching sodium intake for health reasons, consult with a professional familiar with your specific needs (doctor, nutritionist, etc) to see whether potassium chloride is a safe alternative. For many people, it is. However, for some (like me0), it’s just as dangerous as traditional salt.\n(In these cases, the problematic bit of chemistry is the chloride, not the sodium. Again, get professional advice.)\nCheck ingredients carefully, especially if potassium chloride is not a safe alternative for you. If you can’t determine the ingredients, you should probably find an alternative.\nVital statistics First post: 13 Jan 2025 ","categories":"","description":"A quick stew ideal for low sodium diets.","excerpt":"A quick stew ideal for low sodium diets.","ref":"/scribbles/trifles/cooking/bachelor-stew/","tags":"","title":"Bachelor stew"},{"body":"Tenets are guiding project principles; they outline and frame design thinking.\nHere are the ones I generally start with.\nDocs are features Many teams treat docs as afterthoughts. Like good software, good docs require design, forethought, and planning.\nEffective docs follow the product lifecycle: design, implementation, review, and maintenance.\nTreat doc reviews as seriously as code reviews. Reviewers need to be proactive and timely in their feedback.\nFeedback must be specific, clear, and actionable.\nDocs solve problems Good docs help people solve problems.\nBefore starting an article, identify the audience and the problem.\nThis defines the intent:\n“As a developer, I want to back up my database.”\n“As a new customer, I want to update my profile.”\n“As an admin, I need to limit access.”\nLike feedback, intent must be specific, clear, and actionable.\nThe article’s complete when it meets the intent. Everything else is extra (and probably goes elsewhere).\nWhen you review an article, test it against the intent.\nSolve first; explain later Most people are in a hurry; they’re trying to answer a specific question.\nGive them the answer. Let them decide what to do next.\nDetails, analysis, and architecture come later.\nWhen planning docs, remember “Breadth, then depth.”\nWork priorities in descending order. Finish what you can with what you have.\nCover basics first and then go deeper. Balance resources, priorities, and feedback.\nWhen you do focus on specifics, start with things relevant to many users, rather than a few.\nWrite for modern audience We have short attention spans and too many distractions. We tend to scan for relevance before diving deep. (Think tl;dr for, well, everything.)\nThis means:\nDesign for scanning. Use simple sentences, short paragraphs, and lots of whitespace.\nBe brief. Be clear. Save details for later.\nUse everyday language rather than industry jargon.\nIf you must use jargon, define it–especially TLAs (three-letter acronyms) and abbrs (abbreviations).\nUse informal language when it’s common.\nExample: app instead of application, info instead of information.\nWhen trying to decide between formal vs. casual language, choose business casual.\nDon’t assume readers have the same context or background knowledge.\nShow empathy: be direct when things are not ideal. At the very least, don’t be a jerk.\nDocs cannot teach everything Docs help people learn the basics and become self-sufficient.\nIt’s tempting to document every behavior and error condition. Yet, too much detail can overwhelm.\nConsider practical limits and diminishing returns.\nThe more you write, the more you have to maintain.\nStart with the 80/20 rule. Let feedback and metrics inform updates.\nPublish, then perfect Unpublished docs help no one.\nDocs don’t need to be perfect to publish. You can always push an update.\nFigure out what you can do with what you have. Do it and then iterate.\nMistakes are OK. Accept, learn, and move on.\nIt’s OK to focus You don’t have to accept (or use) every good idea.\nAccept feedback and contributions openly; use those that serve the intent.\nIf something doesn’t fit, throw it in the backlog and file a follow-up ticket.\nActively maintain, review, and triage your backlog. Make time for quality sprints.\nLog and prioritize all requests. Work date-sensitive items in descending priority order.\nMore about tenets Tenets are part of the Amazon design process. They answer questions that aren’t otherwise addressed by your project docs.\nAt Amazon, every project is expected to feature tenets prominently. (Some projects post tenets publically.)\nBy tradition, tenets are introduced the subtitle “Unless you can think of better ones.” This reminds people that tenets can, should, and do change as projects evolve.\nI use tenets to:\nSet expectations Outline direction Enable conversation These tenets are part of (nearly) every project I work on. (I don’t always tell people about them.)\nUnless you can think of better ones…\nVital statistics 6 July 2024: First post to this site ","categories":"","description":"Guiding principles for doc projects...unless you can think of better ones.","excerpt":"Guiding principles for doc projects...unless you can think of better …","ref":"/tips/doc/tenets/","tags":"","title":"Doc project tenets"},{"body":"Here are a few common (and uncommon) tasks you can perform from the command-line.\nSet up new project $ git clone ... $ git submodule init $ git submodule update Start work $ git checkout main $ git pull $ git checkout branch-name $ git merge main // resolve merge conflicts, if any This helps keep things up-to-date when working with others.\nThere are considerations and alternatives.\nWork task $ git status $ git add //... $ git commit -m \"Relevant and descriptive commit message\" $ git push $ git checkout main $ git pull Clone repo wiki $ git clone \u003cproject-url\u003e.wiki.git Fix commit message typo $ git commit --amend -m \"Commit message without typos.\" Not guaranteed; best if run before making additional changes.\nList recently updated branches $ git branch --sort=-committerdate This displays results in descending order.\nTo display in ascending order, remove the hyphen (-) after --sort=.\nRevert file $ git checkout -- \u003cfilename\u003e Show branch remote origin $ git branch -vv Show unmerged commits $ git branch --no-merged main Unstage commit $ git restore --staged \u003cfile\u003e View config $ git config --list Vital statistics First post: 14 May 2024. ","categories":"","description":"A cheatsheet to common (and not-so-common) command-line tasks","excerpt":"A cheatsheet to common (and not-so-common) command-line tasks","ref":"/tips/git/console-commands/","tags":"","title":"Git console commands"},{"body":"“Reliable” sources tell me these quotes were overheard in (or near) Quark’s bar on Freecloud (Alpha Doradus):\nWhat is this talk of software ‘releases’?\nKlingons do not ‘release’ software; our software ESCAPES, leaving a bloody trail of designers and testers in its wake!\nThis code is a piece of gagh! You have no honor!\nA TRUE Klingon warrior does not comment his code!\nBy filing this bug report, you have questioned my family honor. Prepare to die!\nYou question the worthiness of my Code?! I should kill you where you stand!\nOur competitors are without honor!\nSpecifications are for the weak and timid!\nThis machine is a piece of GAGH! I need more processors if I am to do battle with this code!\nPerhaps it IS a good day to Die! I say we ship it!\nMy program has just dumped Stova Core!\nBehold, the keyboard of Kahless! The greatest Klingon code warrior that ever lived!\nYou cannot really appreciate Dilbert unless you’ve read it in the original Klingon.\nIndentation?! - I shall show you proper indentation…on your skull!\nKlingon function calls do not have ‘parameters’ - they have ‘arguments’ – and they ALWAYS WIN THEM.\nDebugging? Klingons do not debug. Our software does not coddle the weak.\nI have challenged the entire quality assurance team to a Bat-Leth contest. They will not concern us again.\nOur users will know fear and cower before our software! Ship it! Ship it and let them flee like the targs they are!\nCry havoc and let slip the docs of war.\n(Originally collected from multiple ‘Net sources, sadly lost over time.)\nVital statistics First post here: 8 June 2024 Originally collected on PerlMonks, 28 Feb 2001, ported for preservation. ","categories":"","description":"A collection of quotes allegedly overheard from Klingon code warriors","excerpt":"A collection of quotes allegedly overheard from Klingon code warriors","ref":"/scribbles/trifles/klingon-coder/","tags":"","title":"The Compleat Klingon Coder"},{"body":"Periodically, new technical writers (and interviewers) ask if I follow a particular process when creating docs.\nI generally follow a process I call GROW:\nGather information Review knowledge Order into a narrative Work the plan At first glance, it seems a bit simplistic. But, I’ve found it helpful for a range of needs.\nEach phase guides you through the project in an agile fashion. If you get stuck, step back and focus on the purpose of the active phase. Use that purpose to identify and guide next steps.\nGather information To begin, collect as much readily-available information as you can.\nMany projects have a variety of nuances and challenges. Cast a wide net to learn as much as you can.\nSome good questions include:\nWhat’s the intent of the result? What problem is being solved and who is the target audience?\nWhat’s the value proposition? Why do we care? What do we gain?\nWhat resources are available?\nThere are multiple facets here:\nWho’s involved? Who are the partners, stakeholders, gatekeepers, etc. What’s the deadline/schedule? Are there specifications or other source materials that describe design thinking? How stable/up-to-date are the source materials? Who are the subject matter experts, reviewers, or other partners that need to be part of the process?\nHow well do you know what you’re working with? What do you need to create the solution?\nAre existing examples (or assumptions) accurate? Relevant? Are they functional or illustrative? Can we do better?\nUltimately, you’re trying to figure out:\nWhat needs to be done? What have you got to work with? When is it needed? Why is it necessary? What does done look like? Move on to the next step when you’ve learned what you can in a reasonable time frame or when you feel like you have enough to start.\nReview knowledge Here, review and synthesize what you’re learned. Decide whether you have enough to craft the narrative.\nThis is a high-level sorting step, one where you try to figure out if you know enough to continue.\nBegin by group what you know into large groups relevant to the process. Categories should be general and loosely defined.\nDon’t worry about putting things in order or fine details at this point. (That’s the next phase.)\nOnce you have things into general categories, take a moment to see if you find the general flow of the narrative. Stay high-level and avoid getting bogged down by details.\nAsk: Do I have enough to tell the story? Does the story make sense?\nIf no, identity what’s missing and go back to Step 1 to fill those gaps.\nIf yes, proceed to next step.\nOrder into a narrative Here, you figure how to tell the story you’ve developed. And, yes, the best presentation may be different than how you originally imagined it.\nIn this step, develop the outline and a doc plan. Figure out the individual steps (tickets) needed to tell the overall story (epic).\nOrganize the items in your groups and discard ones that don’t fit the narrative. Choose what to include and how to present it.\nIf your deliverable has multiple components, prioritize them and lay out a schedule.\nAt the end of this step, review the outline and ask if if your narrative makes sense.\nIf not, examine the trouble spots gaps and how to address them. Use earlier process steps to focus on each one until you’re satisfied with the plan.\nWhen the plan’s good, you’re ready to do the actual work.\nWork the plan Here’s where the plan meets reality. Start with the highest priorities and move through the list until finished.\nIf your plan is a good one, this step can move very quickly. With practice, the solutions almost write themselves.\nIf you find things aren’t going well, that’s typically a warning sign. Take time to step back and review. You might need more investigation and time to refine.\nWhen finished, you should have a deliverable solution. It’s a good time for a traditional retrospective.\nWhat worked? What could be better? What can you improve? Handling feedback If you work with partners or other stakeholders, you’ll want to get their input as early (and frequently) as feasible.\nThe most opportune times depend on the team and the people involved, but I’ve found it helpful to get feedback on the plan (after step 3) and the solution as it develops.\nComplicated projects can benefit from feedback from the Review phase. Be open and flexible.\nIf you have different levels of review (technical, style, editorial, etc), be sure to communicate progress and provide appropriate lead time. Early review often identifies problems when they’re easier to solve.\nGetting past blocks I’ve found this process helpful in getting past many challenges, including writer’s block. When I’m not sure what to write next, I take a deeper look at my plan and my assumptions. Often, a little more research or validation helps work past the block.\nIf you’re stuck, try to articulate the sticking point. Step back, walk through the narrative, and look carefully at each step. Doing so often highlights the underlying issue.\nThe GROW process is fairly intuitive and perhaps even a bit simplistic.\nI don’t claim to have invented it and it may be known by a more well-known name.\nI have found it very helpful in my work. Your mileage may vary.\nVital statistics 15 October 2024: First post for this website ","categories":"","description":"Develop content in an agile fashion (and handle writer's block)","excerpt":"Develop content in an agile fashion (and handle writer's block)","ref":"/tips/doc/grow-content-process/","tags":"","title":"GROW Content Process"},{"body":"Once established, git workflows go fairly smoothly.\nAt some point, you might realize that a branch pull request (PR) includes commits that it shouldn’t.\nAlternatively, your local default branch (main or master for older projects) has somehow managed to get ahead of the remote origin.\nTo fix things, you need to:\nReplace the broken branch Replace the broken pull request Replace broken branch For the most part, you can’t selectively remove commits from a pull request.\nInstead you need to replace the broken branch with a new one.\nTo do so:\nReview the commits in the broken PR Determine (and save) the commit IDs for the changes you want to keep Create a new branch and then add the selected commits in your new branch Discard the original branch Here’s how it works:\nDetermine and save the IDs for the commits you want to keep:\n$ git checkout broken-branch $ git log If you’re lucky, you just need the first commit ID displayed in the log.\nCreate and check out a new branch\n$ git checkout broken-branch-update $ git log Tip: Consider linking the branch names. Here, I’ve added update to the previous branch name so that a future reviewer might recognize the connection between the branches. Such consistency can help when looking back weeks or months later.\nReset the new branch to a known baseline, such as your remote default branch (origin/main).\n$ git fetch origin main $ git reset --hard origin/main If you receive an error saying Fatal: could not read from remote repository, it’s likely one of the following:\nYou’ve mistyped origin: verify the name of your upstream remote and try again. Your current working directory isn’t (yet) part of your remote branch. Change to a shared directory and try again. Your session credentials have expired; renew your session and try again. Add the desired commits from the original branch:\n$ git cherry-pick saved-commit-id Run this for each saved commit ID.\nReview your local files and commit your changes.\nWhen satisfied, push your new branch:\n$ git push origin broken-branch-upd:broken-branch-upd To finish: create a new pull request (which should be blissfully free from other commits), delete the original (broken) PR, and then clean up your local branches.\nBefore adding additional commits to your new PR, consider pushing a small edit within the scope of the PR. If this triggers an upstream warning that “changes aren’t tracked remotely,” use the text in the error to set up remote tracking.\n$ git push --set-upstream origin broken-branch-upd Consider doing this now to avoid future surprises.\nReset local default Once you’ve replaced broken branches and pull requests, you will likely need to reset your local default branch (main) to your remote default (origin/main).\nTo begin, check out main, investigate the differences between your local copy and your upstream remote, and then resolve any differences. (Most have likely been resolved while replacing broken ranches.)\nWhen things look good, reset your local default (main) to your remote default (origin/main):\n$ git checkout main $ git fetch origin main $ git reset --hard origin/main $ git status On branch main Your branch is up to date with 'origin/main'. nothing to commit, working tree clean Once the working tree is clean, you’re ready to resume your normal activities.\nVital statistics Update\n7 May 2024 - Rewritten to reflect current style and conventions Tested\n8 March 2017 using git 2.10.1, MacOS Sierra 10.12.3 Source material Based on Stack Overflow Question #25955822.\n(My mileage varied, so I wrote this and added my comments.) ","categories":"","description":"Shows how to clean up branches after mistakes happen.","excerpt":"Shows how to clean up branches after mistakes happen.","ref":"/tips/git/fix-default-branch-mistake/","tags":"","title":"Fix broken branches and main mistakes"},{"body":"To be effective, tech docs need to be accurate, clear, and readable.\nReviewers and subject matter experts (SMEs) help keep things accurate; they also let you know when things aren’t clear.\nStudies have shown you can improve readability by lowering the education level needed to understand a piece of writing.\nThere are many ways to estimate education level, including Flesch-Kindcaid, Gunning fog, and many others.\nThis article shows how modern writing principles can lower readability scores, which in turn leads to more effective content.\nInitial setup To begin, consider the following text:\nAre you passionate about translating complex technical concepts into clear, concise, and engaging content for developers? We’re looking for a skilled Technical Writer to join our team and help us build world-class documentation for our APIs, SDKs, and other developer tools. You’ll play a critical role in shaping how developers interact with our platform—creating guides, reference docs, and tutorials that empower them to build seamlessly and confidently with our technology.\nIn this role, you’ll collaborate closely with engineers, product managers, and developer advocates to craft content that’s not only technically accurate but also easy to understand and enjoyable to read. Whether you’re documenting a new REST API, writing a walkthrough for a JavaScript SDK, or helping structure a developer portal, your work will have a direct impact on the success of our growing developer community. If you love working at the intersection of code and communication, we want to hear from you.\nThis sample was originally generated using ChatGPT while working to create a job description for a developer doc role. The goal was to create an introduction that would draw attention and encourage applicants.\nHemingway app reported the sample at a 16th grade reading level, which equates to a senior college student in the US.\nAs written, the sample has 154 words in six sentences and two paragraphs. Five sentences are classified as very hard to read. There are four adverbs, considered weakeners.\nMost readers can read the sample in 37 seconds.\nFirst rewrite One of the easiest ways to improve readability is to reduce the use of compound or complex sentences. It helps to remove adverbs and other weakeners.\nThe first rewrite also tries to make the sample more engaging:\nAre you passionate about clarity? Do you enjoy translating complicated concepts to concise and engaging content? Are you interested in great code and good security practices?\nWe’re looking for an experienced Technical Writer to join our team. You’ll create world-class documentation for our APIs, SDKs, and other developer tools. Help developers use our technology to solve their security challenges.\nYou’ll create guides, reference docs and tutorials. Collaborate with engineers, product managers, and developer advocates. Help developers understand REST APIs, SDKs, integration kits, and examples. Help our developer community solve real-world problems.\nIf you love working at the intersection of code and communication, we want to hear from you.\nHemingway app grades this at a 10th grade reading level, which is a dramatic improvement over the original (early high school as opposed to near college graduate).\nThe revised sample has 108 words in eleven sentences and five paragraphs. No sentences are hard to read and there are no weakeners.\nMost readers can read the sample in 34 seconds.\nHere, you see that a relatively basic edit greatly improves readability.\nWe can do better, though.\nSecond rewrite Consider this version:\nWe’re looking for an experienced Technical Writer. Help developers use our technology to solve their real-world security challenges.\nAre you passionate about clarity? Do you enjoy translating complicated concepts to concise and engaging content? Are you interested in great code and good security practices?\nIf you love working at the intersection of code and communication, we want to hear from you.\nHemingway app grades this at a 9th grade reading level, which is the level targeted by many tech writing teams.\nThis version has 61 words in six sentences and three paragraphs. No sentences are hard to read and there are no weakeners.\nMost readers can read this in 15 seconds.\nThis edit is more of a developmental edit than the earlier edit. Content was restructured and focused to improve the narrative flow.\nI feel this version flows better and is more engaging.\nImproving readability To improve readability:\nUse short sentences and lots of whitespace. Use active voice. Be brief and clear. Remove repetition. Use terms familiar to readers. These should sound familiar.\nCalculating scores Several tools provide interactive readability scores. Examples include Hemingway app, Microsoft Word, and others.\nThe Readability Wikipedia article helps you calculate readability using several different techniques and algorithms.\nYou can also use the GNU style utility from the diction package to calculate readability scores for text files from a command line.\nFor best results, convert Markdown (and other markup formats) to text before running the utility.\nThe process varies according to your system.\nOn a Mac terminal (or other bash/tsh console), the process might look like:\n% curl -o myfile.html https://example.com/article-URL % pandoc -i myfile.html -o myfile.txt --to=plain % style myfile.txt Here, an HTML file is retrieved from a URL and converted to text using the pandoc utility.\nUse your package manager to install the required utilities:\n% brew install pandoc diction After installing, use % man style to learn more.\nIf you use Vale to check your content style, you can create a custom configuration to calculate readability scores. For details, see Alternate rulesets.\nVital statistics 16 August 2025: Added Vale customization note. 7 June 2025: First post for this website, adapted from a private brown-bag presentation ","categories":"","description":"Shows how readability scores (and modern writing principles) lead to better docs.","excerpt":"Shows how readability scores (and modern writing principles) lead to …","ref":"/tips/doc/readability/","tags":"","title":"Readability scores"},{"body":"Here’s a burrito filling that can be used for tacos, burritos, taquitos, or a number of similar dishes. It’s also something that works well for pot lucks or get-togethers.\nIt also freezes well, which means you can have the convenience of frozen burritos without the unhealthy ingredients currently found in most.\nNote that the recipe calls for specific ingredients and brands. If you have to substitute, be sure to verify the nutritional profile against your dietary needs.\nIngredients 1 10-oz packet Thrive Market organic refried pinto beans (320mg sodium per packet) 2 cans no salt added pinto beans (~35mg sodium, each can) 1 package (oz) plain brown, whole grain rice, cooked per instructions (0mg sodium) (Optional) 4-oz ground beef, browned (~75 mg sodium) Seasoning: Per taste and preference. I generally start with: 1 tablespoon low sodium taco seasoning 2 teaspoons onion powder 2 teaspoons garlic powder 1 teaspoon black pepper For best results, drain and rinse the canned beans.\nPreparation Cook \u0026 heat rice per directions.\nIf adding ground beef, brown and drain.\nDrain and rinse canned beans.\nMix all ingredients in a oven-safe bowl until well blended.\nSeason to taste.\nBlend until well-mixed.\nCreated 12-16 servings depending on the wrap.\nComments The beef adds enough texture to be tasted without much impact to the nutritional value of an individual serving.\nThis amount of meat appears to be similar to the recipes used for most convenience store burritos.\nWhen serving, use wraps appropriate for your dietary needs. Here are a few suitable for low sodium diets:\nGarden of Eatin’ taco shells, yellow \u0026 blue corn varieties (0mg sodium each) La Banderita street taco tortillas (15 mg each) Mr. Tortilla multigrain wraps (85mg sodium each) Mission street tacos (20mg each) Santo Corral Nopal (cactus) tortillas (15mg each) Note: this product segment changes quickly. In the last few years, I’ve had to find new wraps as manufacturers discontinue products with low sales.\nOccasionally, you can order directly from the vendor. Look for website details on the product wrapping.\nUnlike my other recipes, this depends on specific ingredients. Unfortunately, this means you need to rework the recipe if you can’t easily obtain the ingredients.\nRead nutrition labels carefully if you need to do this. (This is especially true for canned beans, which frequently claim that a 15oz can contains 3-1/2 servings. When each serving includes 220mg sodium, well, you can do the math.)\nAs written, this creates a lot of filling. Fortunately, it freezes well.\nI’ve used this to create a batch of frozen burritos that I then work through over the course of the next several days.\nYou can make a smaller batch by using one one additional can of pinto beans, but the resulting texture shows rice more readily. Experiment to find the right mix for you.\nWhen frozen, these travel very well and can help with short trips.\nWhen browning ground beef or other meats, use low temperatures to reduce the need for oil or non-stick sprays. This reduces the hidden nutritional impact that preparation can have on a dish. (It takes longer, but the time is well invested.)\nAs with the bachelor stew, seasoning helps makes this work. If you find the existing too mild, consider adding cumin or other ingredients.\nAdd salsa and other ingredients with care, as many commercial salsas include large amounts of salt.\nVital statistics 27 July 2025: Added list of wraps 15 March 2025: First post to this site ","categories":"","description":"A low sodium reinterpretation of burrito filling that brings Taco Tuesday back to the menu.","excerpt":"A low sodium reinterpretation of burrito filling that brings Taco …","ref":"/scribbles/trifles/cooking/burrito-filling/","tags":"","title":"Low sodium burrito filling"},{"body":"To customize a Hugo site theme, use a local file to override the theme setting.\nThe specific file depends on the change you want to make.\nHere, we use a simple example to show how this works.\nThis site uses (Docsy) as its base theme, which sets paragraph margins as follows:\np { margin-top: 0; margin-bottom: 1em; } This appears to be an attempt to make text placement more predictable, which makes sense given the number of different browsers, devices, operating systems, versions, add-ons, and other variations that can impact display dimensions.\nUnfortunately, this change does not affect all HTML elements, which means it leads to visual glitches in certain circumstances. (One key example is the use of indented paragraphs in list contexts, such as bulleted (\u003cul\u003e) or numbered lists (\u003col\u003e).\nIn such cases, a more effective solution is:\np { margin-top: 1rem; margin-bottom: 0.3rem; } This approach assumes paragraphs and other text elements exist in a larger narrative and defines a natural amount of both leading and trailing whitespace for readability.\nTo override the default theme style:\nIn your project source, open assets/scss/_styles_project.scss.\nIf you do not currently have an assets/scss folder or a _styles_project.scss file, create them.\nAdd the following CSS block:\n/* Override project style rules here. For details, see https://www.docsy.dev/docs/adding-content/repository-links/#disabling-links */ p { margin-top: 1rem; margin-bottom: 0.3rem; } Save and preview your changes.\nOnce built, your overrides follow traditional CSS rules for precedence (mozilla.org).\nBackground details Strictly speaking, the initial style rule isn’t a Docsy problem, nor is it a bug.\nIt’s a side-effect consequence of a deliberate design decision by Bootstrap, which Docsy depends on.\nBootstrap is a web interface design framework that simplifies web design across multiple browsers, devices, operating systems, and versions. They use a “Reboot script” to reset basic design settings to create a level playing field.\nUnfortunately, this design doesn’t work as well with complex formatting, such as nested paragraphs inside lists.\nThe Bootstrap design assumes that text should appear at the top of all bounding boxes. It moves leading and trailing whitespace below the text. As a result, noticeable (and unexpected gaps) appear when include nested paragraph list items with other HTML elements.\nPer the original W3C spec, paragraphs are meant to have leading whitespace and the defaults by most browser vendors reflect this.\nHopefully, future iterations of the Bootstrap reboot script will more extensively test the side effects of various design changes. Until that happens, you can override the paragraph CSS rule in order to create a more consistent and visually pleasing experience.\nVital statistics 10 Sep 2024: Initial version for this site. ","categories":"","description":"How to customize a Hugo theme style","excerpt":"How to customize a Hugo theme style","ref":"/tips/doc/hugo/customize-theme-style/","tags":"","title":"Customize theme styles"},{"body":"When trying to push a commit using git from the command-line, you receive a GH007 remote error:\nremote: error: GH007: Your push would publish a private email address. Here, you’ve likely:\nConfigured your local copy of git to use the email address associated with your GitHub account Enabled the Keep my email addresses private option in your Github profile settings. The error is Github’s way of enforcing the privacy of your email address.\nTo fix things, you can:\nConfigure git to use your noreply email address (displayed in GitHub email settings) (Preferred) Deactivate email privacy (Not recommended) If you choose the former, you also need to reset the commit to use the noreply address.\nHere are the steps:\nUse Github email settings to determine your noreply address. (Consider coping it to the Clipboard.)\nUpdate email address in local config:\n$ git config --global user.email\nReset the commit\n$ git reset --soft HEAD ~1\nAdd, commit, and push your changes.\n$ git add . $ git commit -m \"My commit message\" $ git push The commit should now succeed.\nTo learn more:\nBlocking command line pushes (GitHub, reviewed 12 May 2024)\nSetting commit email address: (GitHub, reviewed 12 May 2024)\nVital statistics First post: 12 May 2024 Source: Based, in part, on Stack Overflow question #43378060 ","categories":"","description":"How to resolve GH007 remote errors related to private email addresses.","excerpt":"How to resolve GH007 remote errors related to private email addresses.","ref":"/tips/git/remote-privacy-errors/","tags":"","title":"Email privacy error"},{"body":"If you’re using Docsy as your Hugo theme, your code blocks might not render correctly in dark mode.\nTo fix this quickly, create a CSS rule that sets the background-color for \u003cpre\u003e elements that are children of the .highlight class.\nHere’s one way to do this:\nIn your assets/scss folder, create (or edit) _style_project.scss.\nDeclare the following rule:\n/* Fix dark mode code rendering */ .highlight pre { background-color: var(--td-pre-bg) !important; } Here, --td-pre-bg evaluates to the background color value defined by your theme.\nSave your changes and rebuild your project.\nYour code blocks should now be more readable in dark mode.\nTo learn more about _styles_project.scss, see Project style files (Docsy)\nVital statistics Last tested with:\nHugo v0.0125.5+extended Docsy v0.10.0 16 May 2024: First post\n","categories":"","description":"How to get code to render in dark mode using docsy theme.","excerpt":"How to get code to render in dark mode using docsy theme.","ref":"/tips/doc/hugo/dark-mode-code-docsy/","tags":"","title":"Fix dark mode code block"},{"body":"Here some practical tips for Microsoft Excel.\nStrikethrough text To draw a line (or strike through) text in a cell:\nEdit the cell Select the text Press Ctrl+5 (Windows) Here, 5 represents the key in the number row of your keyboard, not the center key in a number pad.\nFor best results, format the cell to wrap overflow text.\nString formula functions Here are a few macros to help manipulate text strings\nFind character in text Use SEARCH to find a character within a string.\nExample:\nGiven a cell (I2) containing F:\\Stuff\\accessibility\\a_element.htm:\n=SEARCH(\"\\\", I2) Returns 14\nTrim from string Use RIGHT to remove characters from the beginning of a string and LEFT to remove characters from the end.\nExample:\nGiven a cell (D2) containing F:\\Stuff\\accessibility\\a_element.htm:\n=RIGHT(D2,LEN(D2)-23) Returns a_element.htm\nReturn variable substring Combine these functions to return text based on the location of a character within a larger string.\nExample:\nGiven a cell (I2) containing accessibility\\accessibility\\a_element.htm:\n=LEFT( I2, SEARCH(\"\\\", I2 )-1) Returns the first folder name (accessibility).\nDate formula functions Here are a few ways to use date functions in formulas.\nYears from UTC dates When working with dates expressed as string values, such as UTC data values, use string functions to reduce the value to one that can be converted to a date.\nExample:\nGiven a cell (E2) containing Wed, 14 Jun 2017 07:00:00 GMT:\n=YEAR(DATEVALUE(LEFT(E2,10))) Returns 2017.\nQuarters from UTC dates Similar techniques can be used in more advanced cases.\nSuppose you have a UTC date value and you want to turn that into a value appropriate for planning (17Q2):\nDetermine the numeric month of the date:\n=YEAR(DATEVALUE(LEFT(E2,10))) // E2 contains UTC date string Calculate the quarter for the numeric month:\n=IF(H2\u003c4, 1, IF(H2\u003c7,2,IF(H2\u003c9,3,4))) // H2 contains numeric month Assemble YYQQ string result:\n=CONCATENATE(RIGHT(G2,2),\"Q\",I2) Here:\nCell G2 contains the two digit year. Cell I2 contains the quarter calculated earlier. ","categories":"","description":"Assorted tips and advice for Microsoft Excel.","excerpt":"Assorted tips and advice for Microsoft Excel.","ref":"/tips/apps/excel-tips/","tags":"","title":"Excel tips"},{"body":"Style guides define rules for using language in a given context.\nThese rules provide a “common voice” that customers recognize and expect when working with professional content.\nA good style guide improves your writing and overall effectiveness.\nRecommended guides For technical docs, consider adopting one of the following:\nGoogle developer doc style guide Microsoft Writing Style Guide Each guide was developed by the publisher using research and customer focus groups. Each is actively tested, reviewed, and maintained by their respective organizations.\nAdopting either guide helps you create better docs.\nFor best results, adopt one as your primary resource and use others as supplements. This leads to more informed editorial decisions, especially when trying to decide whether it’s time break the rules.\nOther style guides Other guides exist, including:\nApple Style Guide Red Hat Technical Writing Style Guide Salesforce Style Guide for Documentation and User Interface Text Ubuntu: Canonical Documentation Style Guide This discussion focuses mainly on editorial style guides.\nThe term style guide can also refer to:\nDesign style guides, also known as visual style guides, which describe interface design and the use of visual controls.\nExamples include:\nGoogle Material Design guidelines Apple Human Interface Guidelines\nBranding style guides, which companies use to present consistent messages to consumers and to protect their brand names, trade dress, and trademarks.\nProject style guides define “house rules” for projects and organizations.\nThese generally describe exceptions to other resources and generally reflect specific decisions made by the editorial team.\nIf you’re new to a team, consider asking whether there is a project style guide–even when familiar with the primary style guide.\nMore editorial resources When your style guide doesn’t answer a particular question, consider these resources:\nMerriam-Webster (modern spelling, usage, and thesaurus) Oxford English Dictionary (legacy language, archaic terms, and alternate uses) The Chicago Manual of Style (book or subscription) The Elements of Style, by William Strunk \u0026 E.B. White (Fourth edition available at Internet Archive) Purdue University Online Writing Lab (OWL) National Archives (NARA) Principles of Clear Writing Historical guidelines Modern technical writing style is based on plain language, a set of guidelines popularized by the Plain Writing Act of 2010, but grounded in much older practices.\nThese guidelines emphasize brief, clear docs with direct language. See Voice \u0026 tone to learn more.\nEarlier approaches include:\nSimplified Technical English (STE), a set of standards originating in the aerospace industry during the 1980s.\nSTE was designed to reduce confusion, especially among readers who did not understand English as a native language.\nMany guidelines assumed that technology would never be able to accurately translate content in real time.\nSTE writing rules were designed to minimize confusion. Because many languages do not support contractions, for example, STE forbade their use.\nAs a result, content written to STE guidelines can seem formal, stiff, and stilted (especially to modern ears).\nMicrosoft Manual of Style (MMOS)\nBased in part on STE, the MMOS was considered a primary resource for technical publications at Microsoft for more than two decades.\nEarly versions were called the Microsoft Manual of Style for Technical Publications (MSTP).\nMicrosoft invested heavily in technical writing as a discipline, which helped MSTP become a standard resource for other technical writing teams.\nIn 2018, MMOS was superseded (replaced) by the Microsoft Writing Style Guide.\nVital statistics 12 May 2024: Updated and reworked for current standards 15 June 2017: Updated and expanded First post: 29 Jan 2017 ","categories":"","description":"Defines \"style guide\" as a term and offers recommendations.","excerpt":"Defines \"style guide\" as a term and offers recommendations.","ref":"/tips/doc/style-guides/","tags":"","title":"Style guides"},{"body":"If, for whatever reason, you’re using Microsoft Word 2011 for the Mac, the following tips may help:\nIf the tabs don’t respond to mouse clicks, try clicking the very top pixel of the tab (or as close to it as you can manage).\nFor some unknown reason, this seems to do the trick.\nThe A footer of section _x_ is set outside the printable area of this page error indicates that the footer (or header) is larger than the non-printable area of the page.\nTo fix this:\nSelect the Header and Footer tab.\nIn the Position section, set the Header from Top and Footer from Bottom fields to appropriate values.\nIf you’re unsure, try 0.5. (The actual minimum value varies according to the printer.)\nThis problem tends to appear in documents edited and saved on devices using different pages sizes.\nBecause paper sizes vary between countries and geographic regions, page size defaults change when you open a document.\nThis can push page margins, headers, and footers beyond expected ranges.\nWhen transferring files between different countries, regions, and languages, use care to verify the Page Setup and Default Language settings before printing or redistributing the document.\nTo update (regenerate) a table of contents (toc), move the cursor inside the toc and then press F9.\nRevision marks consume a lot of memory.\nIf the document requires several seconds to render or navigate, try clearing previous revision marks.\nThe following keyboard shortcuts help manage list and paragraph indents:\nPromote bullet one level (move right): [Shift] + [Control] + [Right arrow] Demote bullet one level (move left): [Shift] + [Control] + [Left arrow] Indent paragraph one tab stop (move right): [Control] + [Shift] + [M] Unindent paragraph one tab stop (move left): [Shift] + [Command] + [M] To convert legacy Word documents to other formats, take a look at pandoc\nBackground Prior to the release of Word 2016 for the Mac, Word 2011 was the latest version of the word processor available for Mac devices.\nGiven the longevity of older Mac devices, it’s entirely possible that someone somewhere is still struggling to get their copy working.\nVital statistics 15 February 2024: Article updated to current style. 31 January 2017: Adding additional tips and fixes. 28 January 2017: Original post ","categories":"","description":"Tips and advice for Word 2011 for the Mac.","excerpt":"Tips and advice for Word 2011 for the Mac.","ref":"/tips/apps/word-2011-tips/","tags":"","title":"Word 2011 tips and fixes"},{"body":"Git for Windows includes a tool called Git Bash, which gives you a bash shell you can use to run git via the command line.\nTo set the Git Bash default directory, change the Start in field on the Shortcut tab of the Git Bash properties.\nHere’s how:\nRight-click the Git Bash icon in the taskbar to display the taskbar shortcut menu.\nRight-click the Git Bash command in the taskbar shortcut menu and then select Properties.\nIf the Target field includes the -cd-to-home option, remove it.\nSet Start in to the directory you wish to use.\nUse the Windows cmd path naming convention, instead of Unix.\nFor example: c:\\mypath\\myrepos instead of /c/mypath/myrepos.\nWhen finished, select OK or press Enter.\nIf necessary, exit and restart Git Bash.\nVital statistics 7 May 2024: Rewritten and updated for site revamp 2 June 2018: First post ","categories":"","description":"How to change the default directory for Git Bash","excerpt":"How to change the default directory for Git Bash","ref":"/tips/git/git-bash-default-path/","tags":"","title":"Set Git Bash default path"},{"body":"By default, the JavaScript Array.sort() function sorts arrays according to character placement within a character set. For most web content, this is UTF-8.\nHowever, this may not always be an ideal result.\nHere, we show how to define a custom sort order in JavaScript.\nProcess array To illustrate, consider the following book titles, organized roughly by the year they were first published.\nA Study in Scarlet The Sign of Four The Adventures of Sherlock Holmes The Memoirs of Sherlock Holmes The Hound of the Baskervilles The Return of Sherlock Holmes His Last Bow The Valley of Fear The Case-Book of Sherlock Holmes To print an array containing these titles to a web page, you might use something like this:\nvar iTotal = astrTitles.length; if ( iTotal \u003e 0 ) { for ( var iTitles = 0; iTitles \u003c iTotal; iTitles++ ) { var str = astrTitles[ iTitles ]; writeTitle( str ); } } Here, the writeTitle() function represents the code needed to display the title on the target device.\nfunction writeTitle( strTitle ) { var obj = document.getElementById( \"pOutput\" ); obj.textContent += strTitle + \"\\n\"; } Example 1: A JavaScript function to write string values to a webpage. (Try it out)\nSort an array When asked to sort the array alphabetically, you might call the Array.sort() function:\nvar iTotal = astrTitles.length; if ( iTotal \u003e 0 ) { astrTitles.sort(); for ( var iTitles = 0, iTitles++, iTitles \u003c iTotal ) { writeTitle( astrTitles[ iTitles ] ); } } Example 2: JavaScript code to sort an array before process it. (Try it out)\nWhen run, this leads to the following:\nA Study in Scarlet His Last Bow The Adventures of Sherlock Holmes The Case-Book of Sherlock Holmes The Hound of the Baskervilles The Memoirs of Sherlock Holmes The Return of Sherlock Holmes The Sign of Four The Valley of Fear From a technical view, these might be the results you expect; however, your users might have different ideas.\nMove leading articles As an alternative, consider:\nAdventures of Sherlock Holmes, The Case-Book of Sherlock Holmes, The His Last Bow Hound of the Baskervilles, The Memoirs of Sherlock Holmes, The Return of Sherlock Holmes, The Sign of Four, The Study in Scarlet, A Valley of Fear, The Here, leading articles (a, an, and the) are moved to the end of the title. To some, these results are clearer and more logical.\nThis strategy is common to business filing systems and known by different names, including dictionary sorting and alphabetic collation.\nFor a detailed look, see Section 4.6 (PDF) of “Guidelines for Alphabetical Arrangement of Letters and Sorting of Numerals and Other Symbols”, by Hans H. Wellisch, 1999 National Information Standards Organization (NISO) Technical Report TR02-1999.\nTo create a custom function that does this in JavaScript, you might use something along these lines:\nfunction moveLeadingArticle( sInput ) { var sResult = sInput.toLocaleLowerCase(); var aArticles = [ 'a', 'an', 'the' ]; var aWords = sResult.split(/\\s/); if ( aArticles.indexOf( aWords[0] ) \u003e -1 ) { sResult = aWords.slice( 1 ).join( ' ' ); sResult += ', ' + aWords[0]; } return sResult; } Example 3: A custom function to move leading titles to the end of an input string. (Try it out)\nHere, the input parameter value is:\nConverted to lowercase. Split into individual words. The first word is compared to a list of known articles (a, an , the). When a title starts with an article, the article is moved to the end of the title. Here are a couple of examples:\nmoveLeadingArticle( \"His Last Bow\" ) returns his last bow\nmoveLeadingArticle( \"The Sign of Four\" ) returns sign of four, the\nCustom sort order You can create a custom sort order by passing an anonymous function to the Array.sort() function.\nvar iTotal = astrTitles.length; if ( iTotal \u003e 0 ) { if ( aResultsArray.length \u003e 1 ) { aResultsArray.sort( function( a, b ) { var SortTermA = moveLeadingArticle( a ); var SortTermB = moveLeadingArticle( b ); return SortTermA.localeCompare( SortTermB ); } ); } Example 4: Performing a custom sort using an anonymous function. (Try it out)\nHere, the anonymous function calls the custom function when comparing string values. When run, these titles are sorted in dictionary order (shown earlier).\nExample #3 shows this in action.\nInternational concerns This example essentially demonstrates how to perform a custom sort using JavaScript.\nUnfortunately, the actual algorithm relies on a specific behavior used to sort titles written in English using Latin characters. It might be useful for book lists, music collections, or even video games involving extensive player inventory systems.\nBeyond these cases, the example might have limited value. It doesn’t account for alternate alphabets, collation patterns, or even languages that do not support articles.\nFrom an Internationalization (I18N) perspective, this technique implements an edge-case scenario used for a single language. (I18N is the art of writing apps to support users and their native assumptions.)\nIf you’re designing a (potentially) global solution, it may be wise to take a few moments to consider:\nDictionary sorting has not been codified as a standards-based collation technique. As a result, it’s not supported by commonly-used libraries. Exceptions require custom code, which complicates maintenance and potentially hinders performance. There may be insufficient resources to support edge cases at a global scale. American sorting conventions may not scale effectively to other English speakers. The Intl.collator() object is typically suggested as a good resource for international concerns. (Unfortunately, few options seem to support this specific scenario for English.)\nAs with many such discussions, you’ll have to balance customer satisfaction against practical development resources.\nTo learn more about I18N, see:\nHandling character encodings in HTML and CSS (W3C) International Components for Unicode (ICU) The Unicode Common Local Data Repository (CLDR) Vital statistics Updated: 8 May 2024 - Rewritten to align to current style guidelines, support the site revamp, and discuss the I18N perspective. First post: 26 January 2017 ","categories":"","description":"Shows how create a custom sort order in JavaScript.","excerpt":"Shows how create a custom sort order in JavaScript.","ref":"/tips/javascript/dictionary-sorting/","tags":"","title":"Dictionary sorting in JavaScript"},{"body":"Windows uses privilege elevation prompts (also known as user account controls or UACs) to confirm administrative actions, such as installing new software, deleting files from sensitive locations, and so on.\nElevation prompt behavior has changed since the original Window Vista introduction, however, the experience can be jarring, especially if you routinely switch between devices running different versions of Windows.\nA few keyboard shortcuts have remained consistent through multiple versions of Windows, including:\nTo quickly accept an elevation prompt, press Left arrow and then press `Enter. To cancel a prompt, press Esc (the escape key). In many (though not all) versions of Windows, you can use Spacebar to select the default button in an elevation prompt. In my experience, the first shortcut is the most widely supported. There’s no guarantee that will continue in future Windows releases.\nHistorical perspective Many find elevation prompts to be annoying. Oddly, this was the original intention.\nWhile I personally appreciate the opportunity to avoid accidentally deleting an important file, I know this isn’t a universal view.\nMore info User account control: How it works (Microsoft Learn)\n“User Access Control in a nutshell”, by Roger Grimes, CSO Magazine, 1 Apr 2008.\n“Protect your Windows network from excessive administrator rights”, Susan Bradley, CSO Magazine, 15 Jul 2020.\nWays to trigger UAC elevation from command line, Raymond Chen, via archive.org.\nNote: Do not go to the original domain Mr. Chen’s article was first posted to. It looks to have changed hands since the original publication and now redirects to a site hosting what appears to be a malicious Chrome add-on.\nThe archived article has useful details for very specific needs.\nVital statistics Updated 06 May 2024: Rewrote to reflect current style and layout. 27 Jan 2017: Original post ","categories":"","description":"Describes how to use the keyboard to manage Windows elevation prompts.","excerpt":"Describes how to use the keyboard to manage Windows elevation prompts.","ref":"/tips/windows/elevation-prompt-shortcuts/","tags":"","title":"Keyboard shortcuts for elevation prompts"},{"body":"An uncommon bit of website maintenance involves reviewing or updating links on a webpage.\nTypically, you want a list of the URLs specified in anchor elements (\u003ca href=\"...\"\u003e\u003c/a\u003e).\nThis means you want a list of the URLs specified in the HREF attribute of anchors.\nLike many tasks, this can be more complicated than it first appears.\nList webpage links Use the Document.links property to get a list of the links on a webpage.\nDocument.links returns an HTMLCollection object, which is a list of Element objects.\nThis list include anchor elements, but it can also include other things, such as SVG images, MathML objects, and more.\nNot every element has an HREF attribute. For best results, make sure the attribute exists before trying to read its value.\nHere’s one way to do this:\nlet aryLinks = document.links; for (const key in aryLinks ) { let obj = aryLinks[key]; if (typeof obj === 'object' \u0026\u0026 obj != null \u0026\u0026 'getAttribute' in obj) { console.log(obj.getAttribute(\"href\")); } }; Example #1: JavaScript code to list a webpage’s links to the browser console.\nSort and remove duplicates To try this out, use the Copy to Clipboard button and then paste it into the Console tab of your browser developer tools.\nAs you review the results, you might notice a few things:\nThere are a lot of links\nThey’re ordered by appearance in the page structure\nThere are duplicates\nWhile there are good reasons behind these observations, you might want to sort the list and remove duplicates.\nHere’s one way to do this:\nlet aryLinks = document.links; let aryURLs = new Array(); for (const key in aryLinks ) { let obj = aryLinks[key]; if (typeof obj === 'object' \u0026\u0026 obj != null \u0026\u0026 'getAttribute' in obj) { const sURL = obj.getAttribute(\"href\"); if ( aryURLs.indexOf( sURL) == -1 ) { aryURLs.push( sURL ); } } }; for (const item in aryURLs.sort()) { console.log( aryURLs[ item ] ); } Example #2: Extracting links, and listing unique URLs as sorted results.\nInstead of directly logging the target URL, this version add a second step.\nIt uses a second array to collect unique ULRs and then sorts the results before printing them to the console.\nVital statistics 10 May 2024: First post, based on private notes. ","categories":"","description":"How to use JavaScript to list and sort links on a webpage.","excerpt":"How to use JavaScript to list and sort links on a webpage.","ref":"/tips/javascript/extract-webpage-links/","tags":"","title":"Extract links from a webpage"},{"body":"Docs, to some degree, represent the voice of your organization.\nPeople respond well to a friendly, helpful tone that is easy-to-read.\nThese principles help.\nUse one clear intent Good docs help users solve problems.\nBefore working on a doc, understand the audience you’re trying to reach and the problem being solved.\nThis is called the intent and is typically expressed as as follows:\n“As a \u003crole\u003e, I want to \u003csolve a problem\u003e.\nExamples:\n“As a developer, I want to back up my database.” “As a novice, I want to create a doc website.” “As a new writer, I want to check the readability of my content.” Good intents helps:\nWriters organize content and know when to stop. Reviewers know the limits and scope of the article. If you’re having trouble outlining an article, take time to consider the intent carefully.\nBe brief Modern readers are in a hurry.\nThey’re not reading your content for entertainment; they’re trying to solve problems.\nDesign accordingly:\nBe direct and concise.\nWrite simple sentences and minimize discussion.\nWrite the simple case first; discuss complications later.\nThe acronym tl;dr is a useful guidepost.\nBe scannable Few people read for depth initially.\nInstead, they scan webpages and try to pick out relevant details before diving deeper.\nStructure your docs accordingly:\nUse short sentences, small paragraphs, and lots of white space.\nMinimize distractions and limit decorations (rules, frames, and blocks of color).\nAvoid distractions, such as elements that move (animated images, autoplay videos, and so on.)\nMove complicated or detailed discussions below summarized answers.\nUse everyday language Many industries have terms and language specific to their domains.\nDon’t assume that your readers know these terms or search on them.\nAs an example, consider the following terms:\nfinetune headunit ingest inference upsert Can you define them clearly? Can your readers? How about people who aren’t already using your product or service?\nInstead, use plain language; define industry terms and jargon.\nShow empathy Some things are hard or complicated. Be up front about it.\nAt the very least, don’t be a jerk.\nDon’t describe something as quick or easy when it’s neither.\nRemove marketing hype and hyperbole.\nFocus on objective, reproducible facts.\nWe’re all learning. Be gentle.\nVital statistics 10 May 2024: First post for this website ","categories":"","description":"Principles for clear, readable docs.","excerpt":"Principles for clear, readable docs.","ref":"/tips/doc/voice-tone-principles/","tags":"","title":"Voice \u0026 tone principles"},{"body":"Most browser automatically capitalize text input elements, which is convenient most of the time.\nThis can create problems when case matters, such as password fields, recovery codes, or other values.\nUse the autocapitalize attribute to deactivate (or disable) automatic capitalization for a specific field.\nHere’s an example:\n\u003clabel for=\"example\"\u003eEnter a lowercase value:\u003c/label\u003e \u003cinput type=\"text\" id=\"example\" name=\"example\" autocapitalize=\"false\" \u003e According to Can I Use?, the default behavior varies according to the browser and the device. When creating web apps for use on desktop and mobile devices, it’s best to test real world value on a variety devices.\nIn particular, note that mobile browsers sometimes behave differently than their desktop counterparts.\nThis behavior was originally noticed while testing a project where iOS devices exhibited different behavior than was seen on laptops. Explicitly setting the autocomplete attribute resolved the issue.\nVital statistics 12 Sep 2024: First post for this site ","categories":"","description":"Shows how to disable automatic capitalization for text \u0026lt;input\u0026gt; elements.","excerpt":"Shows how to disable automatic capitalization for text \u003cinput\u003e …","ref":"/tips/web/html/auto-capitalization/","tags":"","title":"Deactivate automatic capitalization"},{"body":"Node.js can help maintain doc experiences through automation. You can use it to:\nDetect file changes in source repositories.\nFix pathname issues in doc source files\nRepair broken (or incomplete) markup\nUpdate pipeline config files\nGenerate index pages, tag clouds, and other supporting content.\nTasks like these frequently require a list of files in a given directory, along with any child directories.\nHere’s one way to generate such a list:\n// rudimentary command line handling. var strFilePath = process.argv[ 2 ]; if ( ( strFilePath == null ) || ( strFilePath == \"\" ) || ( strFilePath == undefined ) ) { console.log( \"Declaration error: Target folder not specified.\" ); return; } // Normalize and verify the input parameter value var p = require( \"path\" ); var strFilePath = p.resolve( strFilePath ); var fs = require( \"fs\" ); var pathStat = fs.statSync( strFullFilename ); if ( pathStat.isDirectory() == false ) { console.log( \"Declaration error: '\" + strFullFilename + \"' is not a folder.\" ); return; } // Prepare the result object var oResults = new Object; oResults.paths = []; oResults.paths.push( strFilePath ); oResults.files = []; // Scan every folder found; make sure we can them all for ( var xDir = 0; xDir \u003c ( oResults.paths.length ); xDir++ ) { var sCurrDir = oResults.paths[ xDir ]; var aThisDir = fs.readdirSync( sCurrDir ); for ( var xThisFile = 0; xThisFile \u003c ( aThisDir.length ); xThisFile++ ) { var strFullFilename = sCurrDir + \"/\" + aThisDir[ xThisFile ]; var xTFStat = fs.statSync( strFullFilename ); if ( xTFStat.isFile() ) { oResults.files.push( strFullFilename ); } else { if ( xTFStat.isDirectory() ) { oResults.paths.push( strFullFilename ); } else { console.log( \"Skipping \", strFullFilename, \"; not a file or folder.\" ); } } } } console.log( JSON.stringify( oResults, undefined, 3 ) ); This example:\nVerifies the parameter value supplied by the caller. Unless a valid directory is provided, an error appears and the script ends.\nScans the target directory and tests each file tested.\nAdds filenames to the files property array and child directories to the paths property array.\nBecause the outer loop relies on paths, child directories are processed.\nYou’ll notice the file evaluation block includes an else for unexpected results.\nWhen the outer loop completes, the oResults object is ready for the next step. here, the results are logged to the console.\nAlternate approach Mind you, there are easier ways to generate a list of files, including a simple shell command:\n$ find ~/projects/mydocsite/_site -name \"*.html\" \u003e filelist.txt In many cases, this might be a preferred solution.\nIf you need additional processing, the earlier approach can help get you started.\nVital statistics 15 Feb 2024: Migrated to new site and style Lasted tested February 2017: Node: v7.4.0 4 Feb 2017: First post ","categories":"","description":"Recursively generate a list of files located in a directory.","excerpt":"Recursively generate a list of files located in a directory.","ref":"/tips/nodejs/collect-filenames/","tags":"","title":"Collect filenames with Node.js"},{"body":"This article shows how to create and use a custom Node module\nNode.js module design is based on CommonJS module specification, though sources vary on the intent and history. (Some sources vary when describing intent and history.)\nTo begin, move reusable functions into a separate JavaScript file (called mymodules.js in this example):\n// myModule.js module.exports.isBlank = function( inputValue ) { var blnResult = ( ( inputValue == undefined ) || ( inputValue == null ) || ( inputValue == \"\" ) ); return blnResult; } module.exports.collectFilenames = function( strTargetPath ) { var oResults = new Object; oResults.paths = []; oResults.paths.push( strTargetPath ); oResults.files = []; var fs = require( 'fs' ); for ( var xDir = 0; xDir \u003c ( oResults.paths.length ); xDir++ ) { var sCurrDir = oResults.paths[ xDir ]; var aThisDir = fs.readdirSync( sCurrDir ); for ( var xThisFile = 0; xThisFile \u003c ( aThisDir.length ); xThisFile++ ) { var strFullFilename = sCurrDir + \"/\" + aThisDir[ xThisFile ]; var xTFStat = fs.statSync( strFullFilename ); if ( xTFStat.isFile() ) { oResults.files.push( strFullFilename ); } else { if ( xTFStat.isDirectory() ) { oResults.paths.push( strFullFilename ); } else { console.log( \"Skipping \", strFullFilename, \"; not a file or directory.\" ); } } } } return oResults.files; } The collectFilenames function shown here is slightly different from the one introduced in Collect filenames. Here, it returns an array of strings an object.\nLimiting the return type to a simple data type gives the module more flexibility, especially with older clients. Subtle errors are easier and calling code tends to be more concise and clearer.\nFunction declaration changes Function declarations have changed as well because Node modules require you to assign functions to the modules.exports object. Thus, your calling code needs to change as well:\nmodule.exports.isBlank = function( inputValue ) { ... } module.exports.collectFilenames = function( strTargetPath ) { ... } As of Node v0.1.16, the module reference is optional for exports defined in the same file.\nCustom module use Once the module is created, you calling code looks something like this:\nvar nbt = require( \"./myModule\"); var fs = require( \"fs\" ); var strFilePath = process.argv[ 2 ]; if ( nbt.isBlank( strFilePath ) ) { console.log( \"Declaration error: Cleanup directory not specified.\" ); return; } var p = require( \"path\" ); var strFilePath = p.resolve( strFilePath ); var aFilenames = []; aFilenames = nbt.collectFilenames( strFilePath ); console.log( JSON.stringify( aFilenames, undefined, 3 ) ); What remains is generally focused on the specific task. Note: If you receive an \"Error: Cannot find module 'example' error when you require your module, try adding a directory reference:\nvar nbt = require( \"./myModule\"); Here, we assume that myModule is located in the same directory as the calling script.\nAdjust as needed to reflect your application structure.\nMore info Node’s full module documentation CommonJS module specification npm’s Creating Node.js Modules tutorial. Node.js, Require, and Exports, by Karl Seguin. How to Node: Creating Custom Modules, by Tim Craswell (archived). Vital statistics 15 Feb 2024: Migrated to new site and style Lasted tested February 2017: Node: v7.4.0 12 Feb 2017: First post ","categories":"","description":"Shows how to create and call a custom Node.js module.","excerpt":"Shows how to create and call a custom Node.js module.","ref":"/tips/nodejs/create-node-modules/","tags":"","title":"Create custom Node.js modules"},{"body":"","categories":"","description":"CSS examples, recipes, and related tidbits.","excerpt":"CSS examples, recipes, and related tidbits.","ref":"/tips/web/css/","tags":"","title":"Cascading style sheets (CSS)"},{"body":"Diagrams Draw.io (also known as diagrams.net) can make visually pleasing diagrams with minimal effort.\nSome tips:\nIf your diagram contains an element with wrapped text, design that element first and then use it as the starting point for the rest of your elements.\nStrongly recommend using a mouse, trackball, or precision pointing device. Alignment is difficult when using gestures or other touch interface controls.\nSet a background color in document properties; otherwise, your final diagram might be transparent.\nIf saving is problematic, save to your local device and then move the file to your intended destination.\nasciiflow creates simple line drawing diagrams using ASCII line drawing characters. Helpful for text file illustrations.\nPencil project is a cross-platform Visio alternative.\n","categories":"","description":"Practical guidelines for creating good docs and help with related tools.","excerpt":"Practical guidelines for creating good docs and help with related …","ref":"/tips/doc/","tags":"","title":"Doc guidelines, standards, and tools"},{"body":" “[M]any of the truths we cling to depend greatly on our own point of view.”\n– Obi-Wan Kenobi, “Star Wars Episode VI: Return of the Jedi” (1983)\nOccasionally, I’m asked I’m a particular Lance Leonard.\nI’ll admit to being a Lance Leonard, but perhaps not the Lance Leonard you’re looking for. (“Haven’t you heard? I come in six-packs.”)\nFor example, I am *not*:\nA conservative politician from New Jersey. (You’ve likely reversed the names, not to mention the, well, never mind. It’s not that sort of site.)\nFormerly of any confection or beverage companies; the email addresses are close, but different. Please look again.\nAnd, since the subject’s been broached… Dude. It’s embarrassing to receive someone else’s private correspondence—especially correspondence that really should remain, well, private.\nThe senior executives of my acquaintance usually know someone who can help them obtain unique digital identities. Has your mileage varied? ‘Nuff said?\nIn the insurance game. Nope; I’m a technical guy…a geek through and through. And I’ve got the funny-shaped dice to prove it.\nDead…at least not yet. That may change at some point and I cannot guarantee that I’ll be able to update the site accordingly.\nYou’ve been warned.\nI suppose I should admit that I’ve:\nBeen to New Jersey (Still miss footlongs on the waterfront) Lived in California (Santa Cruz, if you must know) Done project work for a notable beverage company Worked for a life insurance/investment company Played dead on stage But those are all meaningless coincidences typical in a life of adventure. None of them mean I’m the guy you’re looking for. Nope. Nuh-uh. I didn’t do it. No one saw me do it. Can’t prove a thing. Pay no attention to the geek behind the content. You can go about your business. Move along. Move along.\nOh, one last thing… Even if I might be the guy you think you’re looking for, I very probably can’t help you locate the person you lost track of way back when.\nLife is frequently weird. The once-possible sometimes becomes the opportunity-lost, the forever-broken, the legally-constrained, the ethically-restrained, and so on.\nAs certain a Formican once noted repetitiously, “Change happens.” Roll with it.\nMore plainly: If I say I cannot help you, I probably can’t…and I may not be in a position to explain why. Please respect that.\nAnd, yes, my sense of humor has been influenced by Douglas Adams, Charles Addams, Harlan Ellison, Monty Python, Leslie Charteris, Neil Gaiman, Terry Prachett, Piers Anthony, and more. Why do you ask?\n","categories":"","description":"Assorted things you should know about me and my sense of humor.","excerpt":"Assorted things you should know about me and my sense of humor.","ref":"/about/fair-warnings/","tags":"","title":"Fair warnings"},{"body":"","categories":"","description":"Covers git-based version control, including GitHub and related concepts.","excerpt":"Covers git-based version control, including GitHub and related …","ref":"/tips/git/","tags":"","title":"Git, GitHub, \u0026 related"},{"body":"The \u003cdetails\u003e element (also known as the disclosure element) hides content until a user chooses to view it. You can use this element to reduce the visual impact of large content blocks, such as extended source code, detailed configuration files, videos, and so on.\nBy default, \u003cdetails\u003e hides content until the user chooses to view it.\nThe \u003cdetails\u003e element is a core HTML element supported by many modern browsers.\nExample Here’s an example of the \u003cdetails\u003e element:\nExpand to view an image The Pale Blue Dot - Revisited (2020)\nThis is an updated version of the Pale Blue Dot, a photo taken by Voyager 1 near the planet Saturn on Valentine’s Day 1990.\nIn the words of astronomer Carl Sagan, this image shows our home. “That’s us… [T]he pale blue dot, the only home we’ve ever known.”\nPhoto credit: The Pale Blue Dot (2020 variant), copied from NASA’s Astronomy Picture of the Day (APOD), 14 Feb 2020 entry. Credits: Voyager Project, NASA, and JPL-Caltech.\nHere, the \u003cdetails\u003e element hides a large image. When you display the image, the rest of the content is pushed down the page.\nUsers unfamiliar with your site may not realize the additional content exists. By hiding content by default, you allow the user to choose when to view it.\nFor best results, design web experiences to support users who engage content in different ways.\nSource The code underlying the example is:\n\u003cdetails\u003e \u003csummary\u003eExpand to view an important image\u003c/summary\u003e \u003cp\u003e\u003cem\u003eThe Pale Blue Dot - Revisited (2020)\u003c/em\u003e\u003c/p\u003e \u003cimg src=\"/images/astro/pale-blue-dot-2020.jpeg\" alt=\"...\"\u003e \u003c!-- details removed for brevity --\u003e \u003c/details\u003e CSS improvements You can use traditional CSS techniques to improve the experience, as shown here:\ndetails { border:1px solid #fafafc; border-radius:4px; padding:.5em .5em 0 } summary { font-style:italic; background-color:#f5f5f5; margin:-.5em -.5em 0; padding:.5em } .details\u003esummary::before { font-style:normal; content:\"\\1F3A6 \" } details[open] { padding:.5em } details:hover { border:1px solid #ddd; box-shadow:#ccc 1px 1px 1px } An interactive demo shows these properties in action.\nVital statistics 4 Jun 2024: Minor edits to improve readability and article focus. 23 May 2024: First post ","categories":"","description":"Describes the \u0026lt;details\u0026gt; element, which lets you hide content until the user chooses to display it.","excerpt":"Describes the \u003cdetails\u003e element, which lets you hide content until the …","ref":"/tips/web/html/details-element/","tags":"","title":"Hide details until needed"},{"body":"","categories":"","description":"An assortment of idea related to HTML and webpage markup.","excerpt":"An assortment of idea related to HTML and webpage markup.","ref":"/tips/web/html/","tags":"","title":"HTML samples, ticks, and tidbits"},{"body":"","categories":"","description":"General notes and tips about JavaScript, regardless of context.","excerpt":"General notes and tips about JavaScript, regardless of context.","ref":"/tips/javascript/","tags":"","title":"JavaScript"},{"body":"","categories":"","description":"","excerpt":"","ref":"/scribbles/journal/","tags":"","title":"Journal"},{"body":"Here’s what I have for Apple Macintosh operating systems, aka Mac, MacOS, OS/X, and so on.\nIt’s a bit of a grab bag at the moment. I’ll add additional material over time.\nFinder Hidden files Finder hides system files (and folders) by default.\nTo view hidden files for the current Finder session, press Command + Shift + . (period). (This affects all open Finder windows.)\nThis is a toggle setting. Press the key to hide the files.\nTo always display hidden files, start terminal and then run:\n$ defaults write com.apple.Finder AppleShowAllFiles true` To hide system files by default, run this command with false as the final parameter.\nYou need to restart all Finder instances to pick up changes. To do so quickly, run:\n$ killall Finder (This command is case-sensitive.)\nHomebrew Homebrew is a popular package manager for macOS, generally run from the command line (Terminal).\nSet up instructions are on the Homebrew site (brew.sh).\nTo keep everything up-to-date:\nbrew update brew outdated brew upgrade For best results, consider running brew doctor twice before starting this process. (There are times when it seems to help.)\nTo learn more, see the brew FAQs (brew.sh).\nSafari Enable developer tools Safari hides View Source and Developer tools by default.\nTo show them:\nStart Safari and then use the menu to select Safari \u003e Settings.\nFrom the Advanced tab of the Settings dialog, place a checkmark next to Show features for web developers\nWhen you do this:\na Develop tab appears in the Settings dialog a Develop menu appears in the app menu The Developer tools can help troubleshoot website issues.\nTo open the Console, for example, use the Safari menu to select Develop \u003e Show JavaScript Console.\nVital statistics 20 Jun 2024: Minor edits 9 May 2024: First post ","categories":"","description":"Apple Macintosh operating systems are covered here.","excerpt":"Apple Macintosh operating systems are covered here.","ref":"/tips/mac/","tags":"","title":"Mac, MacOS, and OS/X"},{"body":"Many modern browsers indent list items 40 pixels by default.\nWhen a nested list contains more three or more levels, the default indent becomes more pronounced.\nYou can use padding-inline-start to control this, as shown in the following examples:\nBrowser default (40px) Custom indent (16px) Base item Shapes Circle Influence Fifths Social Square Town Meal Deal Triangle Acute Right Obtuse Colors Red Antares Betelgeuse VY Canis Majoris Blue Alpha Camelopardis Cygnus X-1 Mintaka Yellow Sol Chalawan Tau Ceti Kingdoms Animal Felis catus Chiroptera Corvus corax Vegetable Broccoli Cauliflower Kale Mineral Tungsten Cinnabar Corundum Base item Shapes Circle Influence Fifths Social Square Town Meal Deal Triangle Acute Right Obtuse Colors Red Antares Betelgeuse VY Canis Majoris Blue Alpha Camelopardis Cygnus X-1 Mintaka Yellow Sol Chalawan Tau Ceti Kingdoms Animal Felis catus Chiroptera Corvus corax Vegetable Broccoli Cauliflower Kale Mineral Tungsten Cinnabar Corundum Here, the first example shows the typical browser default (40px) and the second reduces this to 16px, as shown in this CSS rule:\n.example-list-indent-16 ul { padding-inline-start: 16px; } Framework impact Common web design design frameworks, such as Bootstrap, often reset (or reboot) browser style defaults to simplify cross-browser design.\nThese changes can affect the list indent. For example, this site defaults to a list indent of 32px because its theme incorporates Bootstrap.\nAs a result, you may need to experiment to achieve your desired results.\nVital statistics 4 Jun 2024: First post ","categories":"","description":"Shows one way to control the space used to indent nested list items.","excerpt":"Shows one way to control the space used to indent nested list items.","ref":"/tips/web/css/list-indents/","tags":"","title":"Nested list item indent"},{"body":"Use the column-width property to display lists in columns that flow like newspaper stories.\nHere’s an example:\nAbyssinian American Shorthair Arabian Mau Bengal Calico Chartreux Himalayan Korat Maine Coon Manx Minuet Norwegian Forest Cat Persian Ragdoll Siamese Snowshoe Tortoiseshell York Chocolate To learn more, including how to style the columns, see Multiple-column layout (Mozilla developer).\nInline examples Here, the list is specified using an inline style parameter applied to an unordered list (\u003cul\u003e) element.\nHTML Markdown \u003cul style=\"column-width: 15em;\"\u003e \u003cli\u003eAbyssinian\u003c/li\u003e \u003cli\u003eAmerican Shorthair\u003c/li\u003e \u003cli\u003eArabian Mau\u003c/li\u003e \u003cli\u003eBengal\u003c/li\u003e \u003cli\u003eCalico\u003c/li\u003e \u003cli\u003eChartreux\u003c/li\u003e \u003cli\u003eHimalayan\u003c/li\u003e \u003cli\u003eKorat\u003c/li\u003e \u003cli\u003eMaine Coon\u003c/li\u003e \u003cli\u003eManx\u003c/li\u003e \u003cli\u003eMinuet\u003c/li\u003e \u003cli\u003eNorwegian Forest Cat\u003c/li\u003e \u003cli\u003ePersian\u003c/li\u003e \u003cli\u003eRagdoll\u003c/li\u003e \u003cli\u003eSiamese\u003c/li\u003e \u003cli\u003eSnowshoe\u003c/li\u003e \u003cli\u003eTortoiseshell\u003c/li\u003e \u003cli\u003eYork Chocolate\u003c/li\u003e - Abyssinian - American Shorthair - Arabian Mau - Bengal - Calico - Chartreux - Himalayan - Korat - Maine Coon - Manx - Minuet - Norwegian Forest Cat - Persian - Ragdoll - Siamese - Snowshoe - Tortoiseshell - York Chocolate { style:\"column-width: 15em;\"} If you’re using a static site generator that implements CommonMark or other Markdown extensions, you might be able to achieve the same result using Markdown.\nHugo support Sites based on Hugo need to activate block level support for the Markdown attributes extension.\nVital statistics 23 May 2024: First post ","categories":"","description":"Shows a simple way to create newspaper-style columns where list content flows vertically.","excerpt":"Shows a simple way to create newspaper-style columns where list …","ref":"/tips/web/css/newspapers-columns/","tags":"","title":"Simple newspaper columns"},{"body":" ","categories":"","description":"Node.js tips, tricks, and one-liners.","excerpt":"Node.js tips, tricks, and one-liners.","ref":"/tips/nodejs/","tags":"","title":"Node.js, npm, and more"},{"body":" “Now that I do know it, I shall do my best to forget it.”\n– Sherlock Holmes, “A Study in Scarlet”, by Sir Arthur Conan Doyle (1887)\nI don’t track you or how you use the site.\nI don’t record any personally identifying information (PII).\nNo cookies are saved to your device, so there’s nothing to opt in to…or out of.\nAt some point, I may add analytics to help understand how people use the site in general.\nWhen I do that, I’ll update things as needed. The plan is to review data in aggregate in order to judge trends, interest, and so on.\nIf I learn you stopped by, I’ll keep that to myself.\nSince I’m not tracking anything, there’s nothing to share, sell, delete, or otherwise abuse.\nThat’s my policy and I’m sticking to it.\n","categories":"","description":"My privacy policy (such as it is).","excerpt":"My privacy policy (such as it is).","ref":"/about/privacy-policy/","tags":"","title":"Privacy policy"},{"body":" A paradox?\nA paradox, A most ingenious paradox!\nWe’ve quips and quibbles heard in flocks!\nBut none to beat this paradox!\n– Ruth \u0026 Frederic, “The Pirates of Penzance”,\nAct II (Scene 19), by W.S. Gilbert \u0026 Arthur Sullivan, 1879\nThe site’s name is based, in part, on lyrics from The Pirates of Penzance. (It’s also a subtle nod to one of my earliest doc roles and, yes, there’s a small story or few.)\nOne can also argue that it’s a malapropism because quips are meant to humorously infer tips and quibbles lead to scribbles. (Or did I mean kits and kibbles?)\nYou can argue whatever you like, but I should probably point out that wordplay is an essential part of my sense of identity and my sense of humor. (I’ve been told I play with words the way my cats play with strings.)\n","categories":"","description":"A bit about the name of the site.","excerpt":"A bit about the name of the site.","ref":"/about/site-name/","tags":"","title":"The site name"},{"body":"","categories":"","description":"","excerpt":"","ref":"/scribbles/thoughts/","tags":"","title":"Random thoughts"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tips/","tags":"","title":"Tips"},{"body":"The xml2js module provides a convenient way to convert XML to JSON using Node.js:\nvar fs = require( 'fs' ), x2j = require( 'xml2js' ); var sInputFile = \"books.xml;\" var p = new x2j.Parser(); var sXMLData = fs.readFileSync( sInputFile, 'utf8' ); p.parseString( sXMLData, function( err, result ) { var s = JSON.stringify( result, undefined, 3 ); console.log( \"Result\" + \"\\n\", s, \"\\n\" ); }); Here, the input file (books.xml) is read into a string variable and then parsed.\nThe result is passed to an anonymous function that formats it before printing it to the console.\nWhen XML elements contain attributes, this version creates an attribute object named $ on the parent and then assigns the values as children of the attribute object.\nTo place attributes as direct children of the parent object (without the intervening $ object), set the mergeAttrs option to true when declaring the parser:\nvar p = new x2j.Parser( { mergeAttrs: true } ); To learn more, see the xml2js docs.\nVital statistics 15 Feb 2024: Migrated to new site and style Lasted tested January 2017: Node: v7.4.0 npm v4.05 xml2js v0.4.17 MacOS 10.12.3 29 Jan 2017: First post ","categories":"","description":"Shows one way to use Node.js to convert XML to JSON","excerpt":"Shows one way to use Node.js to convert XML to JSON","ref":"/tips/nodejs/xml-to-json/","tags":"","title":"Convert XML to JSON"},{"body":"To view your Windows product key, open an elevated Command prompt and then run:\nwmic path softwarelicensingservice get OA3xOriginalProductKey Note that the final value starts with a leading capital “O” (as in Oscar, not zero).\nThe command is case-sensitive.\nIf this doesn’t return a key, you’re likely using an OEM digital license.\nIn that case, trying using RedEdit to locate the following key:\nHKEY_LOCAL_MACHINE\\ Microsoft\\ Windows NT\\ CurrentVersion\\ SoftwareProtectionPlatform The value of the BackupProductKey setting contains your product key.\nVital statistics 7 April 2025: First post for this site ","categories":"","description":"Describes two ways to view the product key associated with your copy of Windows.","excerpt":"Describes two ways to view the product key associated with your copy …","ref":"/tips/windows/view-product-key/","tags":"","title":"View product key"},{"body":"TEH LEGEND OF TEH YULE KITTEH (a Jólakötturinn folk story, translated and rather unfaithfully adapted for the sensibilities of modern small cats)\nWay up norf in Iceland lives teh biggurest kitteh in all teh wurld. Dis kitteh SO BIG dat her cud carry 1…2…manee hoomins on hers back (if she wanted to, wich she DOES NOT). Hers stripey gray fur can has all teh floofy and hers green-rimmed yellow eyes beez glowier dan teh fullurest of moons.\nHer can jump across whole mowntins and oshuns and run so fast u no can sees her, but mostely she lieks to sleepies in hers warm playce under a grate volkayno and dream of blood and murder (liek u do).\nDis reely awsum kitteh name Yule Kitteh becuz on Yule Eve her awaykens reddy to hunt. (Yule = wut Iceland kittehs call Catmas.)\nHer cud kill ennyfing her want but her iz gud kitteh and hers favrit nom beez bad hoomins wut maeks all teh nice hoomins leave thers kittehs all alone and go workies for teh bad hoomins ALL DAY and denn not even givez dem enuf moneys to buy teh gud kind of stinky wet fuds or ENNY TREETS AT ALL or even warm clothez so dey can covvur up dat furless skin (cuz nobuddy do want see dat, eww).\nWenn Yule Kitteh rizes from hers long sleepies she can has a srsly hungrie! So she stalks teh bad hoomins as dey go rownd in thers fancy noisyboxes to thers fancy partys in thers fancy warm clothez. And denn her POWNCES and snatches dem all up in hers mytee jawz and onlee has to shake dem 1 TIEM till all ded, gud girl.\nDenn she peels off thers fancy clothez (cuz dey no gud fur noms) and puts teh clothez in hers bag dat her carries in hers mouf. And denn her noms dem bad hoomins all gone and spits thers bones out behind her (cuz bone splinturs in ur tum = owie, srsly).\nDat amayzing Yule Kitteh run and jump and stalk and pownce and nom hers way rownd teh whole wide wurld until finalllly hers grate hungrie sayted. Denn her take all teh fancy warm clothez and fings in hers bag and give dem to teh gud hoomins so dey can has a warm lap for thers kittehs sleep on and moneys to buy thers kittehs plentee stinky wet fuds and treets.\nWenn her dun wif all dat her can has a srsly tyord, so she go back to hers lair under teh volkayno to curl up for a looooong winters nap. If u stayz up Catmas Eve waiting fur Santy Claws, keep ur earses flicking fur teh sownd of hoomins skreeming and u will know Yule Kitteh beez near. And if ur hoomins finds warm clothez and othr nice fings under teh Catmas Tree u will know dat Yule Kitteh finks u can has gud hoomins wut surve u well all ur days.\nTEH END!!!\n– Reposted, with permission, from a December 2023 Facebook post by Beverly Marshall Saling\nVital statistics First post here: 25 December 2024 ","categories":"","description":"A holiday tale of the Yule Kitty","excerpt":"A holiday tale of the Yule Kitty","ref":"/scribbles/trifles/yule-kitty-legend/","tags":"","title":"The Legend of the Yule Kitty"},{"body":"When working with multiple monitors, it’s possible for open windows to be left offscreen.\nI’ve see this happen when:\nTraveling with a laptop normally hooked up to external monitors when docked at home.\nUsing a KVM switch to share a monitor between different machines.\nMost of the time, windows adjust to the new display area. Every so often, however, one remains in its original position. It’s open and responds to input. Because it’s offscreen, you can’t see what’s going on.\nTo bring the window into view, select Move from the window’s system menu and then use the keyboard arrow keys.\nKeyboard shortcuts To open the system menu using the keyboard:\nActivate the window using Alt+Tab or by selecting it through the Taskbar.\nPress Alt+Spacebar (to open the system menu), press M (to select the Move command), and then use the arrow keys to move the window into the display area.\nIt’s a bit clumsy, but it does work.\nWindows taskbar If you’re using Windows 10 (or later), you can use the taskbar to open a window’s system menu:\nPress and hold the Shift key Right-click the taskbar icon for the window you want to move. Select Move from the menu and then use the arrow keys. Vital statistics Updated: 7 May 2024 - Reworked and refactored for website revamp. Last tested: September 2018 - Windows 10 Enterprise, version 1809. ","categories":"","description":"Describes how to bring an offscreen window into view.","excerpt":"Describes how to bring an offscreen window into view.","ref":"/tips/windows/recover-offscreen-window/","tags":"","title":"Recover offscreen window"},{"body":"The value may be limited, but certain audiences may find them useful.\n","categories":"","description":"Tips for various legacy apps","excerpt":"Tips for various legacy apps","ref":"/tips/apps/","tags":"","title":"Office app tips and tricks"},{"body":"This page is a preview of things to come.\nIf you’re seeing it, well, welcome…I guess.\n(It’s supposed to be private. So, shhhhh. )\nTab 1 Tab 2 This is the first tab. It has one set of content.\nThis is the second tab; it has another set of content.\nEarlier test follows...\nInvestigate Need Review request Identify source material Outline initial requirements Design solution Determine scope \u0026 effort Identify \u0026 prioritize tasks Confirm assumptions Fill knowledge gaps Plan the work Identify \u0026 prioritize tasks Identify epics \u0026 phases Initial content outlines Work the plan Rough draft based on outline Verify steps \u0026 procedures Initial screenshots/examples Evaluate readability \u0026 style Review Item 1 Item 2 item 3 Iterate Evaluate results Adjust plans \u0026 phases Schedule next steps ","categories":"","description":"","excerpt":"This page is a preview of things to come.\nIf you’re seeing it, well, …","ref":"/preview/","tags":"","title":"Preview page"},{"body":"Scribbles (or quibbles, if you prefer) are generally random write-ups and opinions, much like any average blog post.\nMajor categories include:\nJournal - Discusses the site and my experiences building/maintaining it.\nThoughts - Observations and essays on a variety of subjects, generally tech related.\nTrifles - Random bits and bobs, generally meant to be thought provoking or (potentially) amusing.\n","categories":"","description":"Assorted write-ups, generally presented as blog posts.","excerpt":"Assorted write-ups, generally presented as blog posts.","ref":"/scribbles/","tags":"","title":"Scribbles"},{"body":"Serve local site To preview local changes:\n$ hugo serve By default, Hugo publishes your preview to https://lanceleonard.com.\nYou can also use command-line options to customize Hugo’s behavior.\nFor example:\n$ hugo serve --disableFastRender --ignoreCache --logLevel warn These options tell Hugo to fully rebuild the entire site when updating the local preview and to display more error messages.\nTo learn more, use Hugo’s built-in help:\n$ hugo -help Show version To display the Hugo version number (or to see if it’s installed):\n$ hugo version hugo v0.125.5+extended darwin/amd64 BuildDate=2024-05-01T15:22:11Z VendorInfo=brew This example shows that the extended version of Hugo v0.125.5 is installed.\nHide content There are times when you’ll want to hide content from from different views.\nFor example, an article might:\nBe in progress and not quite ready for public consumption Have to wait for another article Serve as a bridging element without having public content Here are different ways to hide content.\nHide article content Use HTML comments to hide content within an article.\n## Section 1 \u003c!-- ## Section 2 in progress --\u003e ## Section 3 This keeps the content from rendering on the published webpage; however, it’s still published in the source.\nUse care when working with sensitive content.\nSet draft mode Use draft mode to keep articles private.\nDo this in the article’s front matter:\n--- title: \"My article title\" description: \"My article description\" draft: true --- If a doc appears in the table of contents (TOC) after setting this option, verify that you’ve set the value as shown.\nTo illustrate, you might accidentally add a semicolon to the end of the line (a common mistake). While this is a syntax error, Hugo doesn’t generate a warning. Instead, it simply ignores the directive.\nTo list articles currently in draft mode:\n$ hugo list drafts For details, see the Hugo reference page.\nExclude from contents To exclude an article from the navigation menu displayed along the left side of the page, hide it from the table of contents (toc):\n--- title: \"My article title\" description: \"My article description\" toc_hide: true --- Hide summary By default, article descriptions appear in index pages as article summaries.\nYou can hide descriptions from the index page by updating the article’s front matter:\n--- title: \"My article title\" description: \"My article description\" hide_summary: true --- Vital statistics 16 May 2024: Added version section 8 May 2024: First post: ","categories":"","description":"Tips and tricks for Hugo, a static site generator.","excerpt":"Tips and tricks for Hugo, a static site generator.","ref":"/tips/doc/hugo/","tags":"","title":"Hugo"},{"body":"Markdown is a lightweight markup language used to create websites and other publications. Based on text, it’s an easy way to format content.\nThere are multiple “flavors” of Markdown, including:\nCommonMark Github-Flavored Markdown (GFM) kramdown Markdown Extra MultiMarkdown R Markdown and more…. Each flavor adds to the basic Markdown capabilities. [MarkdownGuide] provides a reference to the most common Markdown extensions.\nIn addition, there are multiple Markdown parsers, also called processors, that each vary slightly in the features they support and how they support them.\nWhen working with Markdown, take time to learn the flavor and parser that you’re using. Doing so can only help you in the long run.\nHere are some useful tools and resources.\nAmpersand in headings Use the HTML entity to specify an ampersand (\u0026) in a heading:\n### C\u0026#35; Sample Backticks inline To place a backtick in inline code (`), start and close your inline code block with two backticks:\n`` ` `` Comments Markdown comments:\n[//]:# (Comment text) You can also use HTML comments (\u003c!-- (stuff) --\u003e).\nLine breaks To force (hard code) a line break:\nLeave two spaces at the end of a line\nUse \u003cbr\u003e elements.\nList indents Markdown supports multi-paragraph lists; however, they can be tricky to pull off.\nIf you’re having problems keeping the indents straight (especially when using bulleted lists), check that:\nYou’re indenting consistently; that is, all bullets in the list have the same number of spaces in front of each bullet and each level is likewise consistent.\nBlank lines between bullet paragraphs are indented to match the level of the following paragraph.\nThat each bullet is followed by just one space (that is, that some bullets don’t add additional spaces before the content)\nYou’re consistently using four spaces to indent child items; a single character slip can throw off the entire list.\nYou indent the starting and closing backticks of code blocks: \"\\n ```\".\nTables Basics Tables require at least three lines:\n| Name | Description | \u003c-- 1. Header |-------|---------------| \u003c-- 2. Separator | Row 1 | Explanation 1 | \u003c-- 3. Data row | Row 2 | Explanation 2 | \u003c-+ | Row 3 | Explanation 3 | \u003c-+ You need a header, a separator, and at least one data row.\nHere’s how the example appears when rendered:\nName Description Row 1 Explanation 1 Row 2 Explanation 2 Row 3 Explanation 3 Notes:\nIt’s not strictly necessary (or always practical) to align each column in the source. It’s easier to read (and therefore to maintain), but it’s not necessary.\nIn the separator line, columns must be defined using at least three hyphens (---).\nColumn alignment | Left | Center | Right | |---------|:-------:|--------:| | `:---` | `:---:` | `---:` | | Alpha | Apple | Alpha | | Beta | Banana | Bravo | | Gamma | Cherry | Charlie | Leads to:\nLeft Center Right :--- :---: ---: Alpha Apple Alpha Beta Banana Bravo Gamma Cherry Charlie Syntax reference Markdown basic syntax reference (Markdown Guide) Github Markdown reference: A more complete reference focused on CommonMark/GFM Converting Markdown GD2md-html is a Chrome extension that converts Google docs to Markdown.\nPandoc bills itself as your Swiss Army for converting docs from one format to another.\nWritage is a Microsoft Word addon that converts DOC files to Markdown. Available for Mac and Windows.\n","categories":"","description":"Markdown is a text-based markup language used for docs and other publications.","excerpt":"Markdown is a text-based markup language used for docs and other …","ref":"/tips/doc/markdown/","tags":"","title":"Markdown"},{"body":"MKDocs is a static-site generator that converts Markdown source files into fully formed websites.\nCheck version Use --version to display the current MkDocs version:\n$ mkdocs --version Hide footer ad Early versions of MkDocs include a small “ad” in the footer of your webpages (“Documentation built wwith MKDocs”).\nYou can hide this by adding a CSS rule to hide the message or by removing it from your site’s template.\nHide with CSS To hide the ad using CSS:\nIn your project’s /docs/ folder, add the following rule to a custom style sheet:\nfooter :last-child { display: none; } Verify that your custom style sheet is declared in your site’s project configuration (mydocs.yml)\nsite_name: My example site exta_css: - hidefooter.css Here, we assume your custom CSS file is named hidefooter.css.\nIf you’re working with an earlier version of MKDocs, you may need to tweak the CSS rule. In version v0.15.x, for example, MKDocs placed its ad in a \u003ccenter\u003e element (now deprecated).\nTo hide the footer in this version:\ncenter { display: none; } Update template You can also update the template to remove the ad entirely:\nInstall a copy of the basic theme into a your project.\nUpdate mkdocs.yml to refer to your new theme:\ntheme_dir: \u003ccustom-template\u003e Update base.html to remove the “Built with” line (line 189 as of this writing).\nSave, build, and deploy as usual.\nCustomize templates MKDocs uses Jinja2 as its templating engine. To learn more, see:\nMkDocs: “Developing themes Jinja2 docs Vital statistics 8 May 2024: Rewritten and updated for site revamp 15 March 2017: First post ","categories":"","description":"Tips and tricks for MKDocs, a static site generator.","excerpt":"Tips and tricks for MKDocs, a static site generator.","ref":"/tips/doc/mkdocs/","tags":"","title":"MKDocs"},{"body":"Package managers vary between distributions (distros).\nHere’s a starting list:\nOperating system (distro) Package manager MacOS (OS/X) brew Alpine Linux apk Amazon Linux dnf (AL2023)\nyum (AL2 and earlier) archlinux pacman Debian (v8+)\nUbuntu (v13.10+) apt-get Fedora Linux dnf (v22+)\nyum (v21 and earlier) FreeBSD pkg gentoo linux emerge OpenBSD/NetBSD pkg_add openSUSE zypper Raspberry Pi (Raspbian) Varies, typically apt or pip Red Hat Enterprise (RHEL) (v7+) yum Slackware sbopkg ","categories":"","description":"Common distributions and their package managers.","excerpt":"Common distributions and their package managers.","ref":"/tips/unix/package-managers/","tags":"","title":"Package managers"},{"body":"Pandoc helps convert documents, such as Word .DOCX files or PDF documents, to alternate formats, like Markdown and others.\nConversion can require a bit of tinkering. The following tips can help.\nSimple conversion To use Pandoc to convert a document to a new format:\n$ pandoc source.docx -o target.md By default, many details are inferred from the input parameters. In this example:\nThe input file (source) is assumed to be a Microsoft Word .DOCX file The output file (target) is assumed to be a Markdown .MD file. Use parameters to control these decisions.\nFor example, --to (-t) controls the variation (or flavor) of Markdown used to format the output file. Valid options vary and include values such as markdown, markdown_strict, gfm, and more.\nOther supported options include:\n--from (-f) \u003cinput_format\u003e --read (-r) is an alias for --from --write (-w) is an alias for --to HTML and Markdown When converting Markdown mixed with HTML, use --from to improve conversion results:\n$ pandoc markdown.md -f markdown+raw_html To learn more, see the Markdown section of the pandoc manual.\nExtract images To extract images from your source doc, add the --extract-media parameter.\nThis requires a value specifying the directory where extracted images should be saved. (The directory must exist before the conversion.)\nExamples:\n$ pandoc spec.docx -o output.md -t commonmark --extract-media=img/ $ pandoc api.docx -o api/_index.md.md -t gfm --extract-media=./img Be sure to validate your input files before converting them. Images cannot be extracted from files that don’t include them.\nThis may seem obvious, but some export results vary according to the format. In 2020, for example, Jira’s “Export to Word” feature excluded images but included them when exporting to PDFs.\nIn contrast, PDFs created by Acrobat Pro DC (v2020.013.20074) required specific settings to include images when exporting .DOCX files. (From View Results, select the Settings icon and then locate Layout Settings. Here, activate Retain Flowing Text and deactivate Include Comments.)\nTable conversion By default, Pandoc converts tables to HTML tables, especially when the source tables include lines breaks or multiple paragraphs.\nIn such cases, you can:\nTry using --to gfm (or an alternate Markdown syntax)\nTry alternate conversion tools, such as h2m.\nModify the source doc for conversion and then later revert the problematic content.\nThe latter option is a multi-step process:\nUse Word’s search and replace feature to replace paragraph marks (^P) with text symbols that don’t otherwise appear in the content (example: \u003c*\u003e).\nConvert the modified document.\nUpdate the converted results to replace your text symbols with \u003cbr\u003e tags or other choices.\nVital statistics 23 May 2024: First post ","categories":"","description":"Helpful tips for using pandoc to convert documents to Markdown","excerpt":"Helpful tips for using pandoc to convert documents to Markdown","ref":"/tips/doc/pandoc/","tags":"","title":"Pandoc conversion tips"},{"body":"Unix contexts The general term “Unix” can refer to any number of specialized contexts, including:\nServer-based versions of Unix, such as FreeBSD Linux distributions, like Debian, RedHat, and Raspberry Pi OS Mobile device operating systems Various command-line consoles, including Mac Terminal, Git Bash, and Windows Subsystem for Linux (WSL). Resources \u0026 links Certificates\nPublic key certificates (explains chain of trust and includes an interesting graphic) (Wikipedia) IETF RFS 5280: X.509 public key certificates (IETF) How to decode an SSL certificate (ShellHacks) Generate certificates for localhost (Let’s Encrypt) ag: The Silver Searcher: Fast alternative to grep that ignores dot files (such as .gitignore, .DS_Store, and so on), which means it’s useful for maintenance scripts and cleanup.\n","categories":"","description":"Tips and reminders that apply to Unix and similar operating systems.","excerpt":"Tips and reminders that apply to Unix and similar operating systems.","ref":"/tips/unix/","tags":"","title":"Unix general tips"},{"body":"Vale is a style-guide validator that helps you write better content.\nWhen run from a command-line, it checks your work against a set of selected rules and highlights potential problems. In writing terms, Vale enforces style guidelines takes from major publishers and related resources. Think of Vale as a personal copyeditor.\nMore formally, Vale is a linter. Developers use linters to make sure their code follows predetermined guidelines. Vale performs a similar task. You can use it to check content written in Markdown, AsciiDoc, Restructured Text (RST), HTML, and more.\nBy default, Vale supports three major style guides:\nGoogle developer doc style guide Microsoft Writing style guide Red Hat documentation style guide Vale also supports supplementary style guides and you can customize rules to match your preferences.\nQuick setup The Vale docs provide detailed installation instructions (Vale.sh) for a variety of options, including Docker. However, they can be a bit hard to follow.\nFor an individual writer, the typical installation process is:\nTo install and set up Vale:\nUse your system’s package manager (Vale.sh) to install Vale.\n$ brew install vale Use the Vale Config Generator (Vale.sh) to create an initial configuration.\nIf you’re not sure which options to choose, consider:\nBase style: Google developer doc style guide Supplemental style guide: proselint Configuration: As appropriate for your project. In the home directory for your project, create a hidden configuration file named .vale.ini\n$ cd ~/work/myproject $ touch .vale.ini Update your configuration file with the generated configuration.\nStylesPath = styles MinAlertLevel = suggestion Packages = Google, proselint, Hugo, alex, Readability [*.{md}] BasedOnStyles = Vale, Google, proselint, alex, Readability Sync Vale to your project settings, which downloads your packages.\n$ vale sync SUCCESS Synced 5 package(s) to '~/work/myproject/styles' When the sync completes, Vale is ready to check your work.\nChecking a file To check a single file, run vale specify the file:\n% vale README.md README.md 1:3 warning 'Docsy Example' should use Google.Headings sentence-style capitalization. 1:3 error Did you really mean 'Docsy'? Vale.Spelling 3:2 error Did you really mean 'Docsy'? Vale.Spelling 4:46 error Did you really mean 'Docsy'? Vale.Spelling 4:79 error Did you really mean 'Docsy'? Vale.Spelling 5:22 error Did you really mean 'hugo'? Vale.Spelling 8:22 error Did you really mean 'Docsy'? Vale.Spelling 8:34 suggestion In general, use active voice Google.Passive instead of passive voice ('is pulled'). In this partial result, Vale:\nReports a capitalization issue with a header Highlights words it doesn’t recognize (Docsy and hugo) Suggests fixing a passive voice use The numbers on the left report the location of the problem in your source file. The first value is the line number and the second reports the character position.\nThe value on the right reports the package and name of the rule, which helps with later configuration.\nYou probably won’t fix every reported problem. You should at least investigate then decide what to do.\nChecking multiple files Use the glob parameter to check multiple files:\n% vale --glob=\"**/*.md\" content/ // details removed ✖ 86 errors, 32 warnings and 52 suggestions in 85 files. In this example, Vale recursively scans the content folder and reports issues in each Markdown file.\nSupplementary styles Vale supports a variety of supplementary style packages, which include:\nproselint : A collection of editorial advice (Github) write-good : Designed to help developers write better prose (Github) alex : Helps write neutral and unbiased content (Github) Joblint : Helps job posts avoid common pitfalls (Github) Readability : Calculates readability scores To add and use a supplementary style:\nUpdate your Vale configuration:\na. Add the supplementary styles to Packages.\nPackages = Google, proselint, Hugo, alex, Readability b. Update BasedOnStyles to include the supplementary styles and their precedence.\nBasedOnStyles = Vale, Google, proselint, alex, Readability Sync your Vale packages\n$ vale sync SUCCESS Synced 5 package(s) to '~/work/myproject/styles' Test your content\nMany organizations publish Vale packages for their in-house style guides.\nTo see what’s available:\nExplore Vale’s Package library (Vale.sh) Search GitHub for the vale-linter-style tag (GitHub). Customizing Vale You can customize Vale so it adjusts to your personal style or to keep it from flagging valid content.\nAlternate rulesets Use the config parameter to run Vale with a different set of rules.\nTo do so:\nCreate an alternate configuration file\nStylesPath = styles Packages = Readability [*.{md}] BasedOnStyles = Readability Use the --config parameter to specify the alternate configuration file:\n% vale --config=\".readability.ini\" README.md README.md 1:1 warning Try to keep the LIX score Readability.LIX (35.90) below 35. 1:1 warning Try to keep the SMOG grade Readability.SMOG (10.01) below 10. 1:1 warning Try to keep the Coleman–Liau Readability.ColemanLiau Index grade (9.06) below 9. 1:1 warning Try to keep the Flesch–Kincaid Readability.FleschKincaid grade level (8.02) below 8. 1:1 warning Try to keep the Flesch reading Readability.FleschReadingEase ease score (61.88) above 70. ✖ 0 errors, 5 warnings and 0 suggestions in 1 file. This example uses the Readability package to calculate a readability score.\nUse this to set up validations run at specific points in your workflow, possibly as part of a final review or a milestone checkup.\nFor best results, use your primary configuration to manage and update packages. Declare them as part of the Packages setting, exclude them from your primary BasedOnStyles, and then create alternate configurations to run on demand. They’ll update when you sync your primary configuration.\nRule adjustments You can use the configuration file to turn off individual rules.\nFor example, the following configuration deactivates two rules specified by the Google Developer Doc style guide.\n## Project style overrides Google.FirstPerson = NO Google.We = NO Custom vocabulary Vale includes a partial spell check and flags words it doesn’t recognize. For example, the earlier single file example included warnings about “Docsy,” the name of the theme used in this site.\nYou can define a custom vocabulary that defines terms that should not be flagged as potential spelling errors.\nTo do so, you need to create a specific set of folders and files in your Vale styles folder:\nMake sure you’re in the directory containing your Vale styles folder.\n% cd ~/work/myproject Update .vale.ini to define a folder for your custom vocabulary.\nStylesPath = styles Vocab = mysite MinAlertLevel = suggestion Packages = Google, proselint, Hugo // remaining lines deleted Here, the Vocab setting defines mysite as a custom vocabulary for this project.\nIn your styles/config/vocabularies folder, create a folder for your custom vocabulary and then create a called accept.txt:\n% mkdir styles/config % mkdir styles/config/vocabularies % mkdir styles/config/vocabularies/mysite % touch styles/config/vocabularies/mysite/accept.txt % touch styles/config/vocabularies/mysite/reject.txt To flag words as problems, add them to reject.txt.\nNext, add the word Docsy to accept.txt file.\nWhen adding new words, put each word on its own line.\nEach word is case-sensitive by default.\nAt this point, Vale ignores the use of the word Docsy in this project.\nUse this feature carefully.\nTo learn more about how Vale handles custom vocabularies, see Vocabularies (Vale.sh).\nEvaluate customizations Effective customization takes time.\nFor best results, take time to review customization results and see how they impact your work.\nTry to balance convenience against risk.\nIt may tempting to turn off a test that routinely flags false positives. If an embarrassing mistake slips through as a result, consider reversing the change.\nVale is a rich and detailed environment, one that supports may customization opportunities.\nStart by exploring Vale’s:\nMedia Library (Vale.sh) Styles doc (Vale.sh) Editor integration You can integrate Vale into popular editors, such as IntelliJ, Sublime Text, Visual Studio Code (VSC), and more.\nWhen you integrate Vale into an editor, the built-in style checking provides real-time feedback about potential issues as you type.\nYou can also incorporate Vale into CI/CD pipelines.\nTo learn more, see Vale’s Language Server (LSP) (Vale.sh) docs\nVital statistics 16 August 2025: First post to this site. ","categories":"","description":"A command-line tool that validates content against a set of known rules. Think of it as your personal style checker.","excerpt":"A command-line tool that validates content against a set of known …","ref":"/tips/doc/vale/","tags":"","title":"Vale: a prose linter"},{"body":"Here is a quick cheat sheet for the vi text editor:\nThere are two modes: Command and Insert.\nThe word INSERT appears in the bottom left corner of the screen when that mode is active.\nIf you’re not sure what mode you’re in, press Esc to go into Command mode.\nTo move the cursor in command mode:\nH (left) J (right) K (up) L (right) Press I to activate Insert mode.\nWhen finished, go to Command mode and then type:\n:wd to save :q! to discard changes Background Like the Spanish Inquisition, the vi editor shows up unexpectedly. I’ve seen it appear when:\nHaving to resolve merge conflicts in git Working with console windows in cloud environments Because I don’t normally use the editor, I tend to forget how to save changes and close it.\nVital statistics Last update: 12 May 20224: Refactored for the new site. First post: 21 September 2017 ","categories":"","description":"A quick cheat sheet for the vi editor","excerpt":"A quick cheat sheet for the vi editor","ref":"/tips/unix/vi-cheat-sheet/","tags":"","title":"Vi editor cheat sheet"},{"body":"Tools and Resources Resources and references for HTML and CSS:\nWorld Wide Web Consortium (W3C, also W3): Home of the standards that describe how things are supposed to work, including: HTML, CSS, Web accessibility, and more.\nMozilla developer docs: Practical (and ad-free) references to HTML, CSS, and related topics, including useful details such as browser compatibility charts, links to defining specifications, and more.\nCan I Use…?: Extensive and detailed reference to feature availability across various browsers. Describes issues and frequently includes workarounds.\nCompart Unicode character reference: Surprisingly useful (and currently ad-free.)\nWeb browsers Chrome: Local network access Chrome persistently requests permission to search for devices on your local network. If you block the request, it repeats within a few days.\nAn experimental setting (flag) can deactivate the behavior:\nType chrome://flags/#local-network-access into the address bar and then press Enter.\nUse the search box to find the Local Network Access Checks setting.\nSelect Disabled from the drop-menu to deactivate the behavior.\nRestart Chrome.\nThe setting is available on Chromium-based browsers that do not override the behavior of the chrome://flags URI. For example, Brave supports the URI; however, Microsoft Edge supports edge://flags (which contains different settings).\nTo learn more the permission, see New permission prompt for Local Network Access [Chrome Developer].\nDeveloper tools Many web browsers provide developer tools to help investigate and troubleshoot websites.\nHere’s how to activate and open them in major browsers.\nApple Safari (included with MacOS) Hidden by default; Use Settings to change Use Safari Develop menu to open desired tool Brave Browser Menu \u003e More Tools \u003e Web Developer Tools Keyboard: Mac: Opt + Cmd + I, Windows: Ctrl+Shift+I Google Chrome Menu \u003e More Tools \u003e Developer Tools Keyboard: Mac: Opt + Cmd + I, Windows: Ctrl+Shift+I Microsoft Edge Menu \u003e More Tools \u003e Developer Tools Keyboard: Mac: Opt + Cmd + I, Windows: Ctrl+Shift+I Mozilla Firefox Menu \u003e More Tools \u003e Developer Tools Keyboard: Mac: Opt + Cmd + I, Windows: Ctrl+Shift+I Web servers DNS alias IP address When setting up a DNS record alias (ANAME or CNAME), you often need to know the IP address to assign to the alias.\nIf you don’t know the IP address, use the dig command to discover it:\n$ dig example.github.io +nostats +nocomments +nocmd ","categories":"","description":"Content related to websites, including HTML, CSS, design, troubleshooting, and more","excerpt":"Content related to websites, including HTML, CSS, design, …","ref":"/tips/web/","tags":"","title":"Web: browsers, design, markup, and more"},{"body":"Assorted links and utilities These links are things I need from time to time. Your interests may vary:\nChocolately: Package manager for Windows\nCreate directory tree on Windows (SuperUser)\nSychronize files between directories (FreeFileSync)\nWindows 8.x: Make a bootable flash drive\nReset Windows XP admin password (I have more than a few older PCs.)\nScreensaver source code, for those times when you feel like recreating older OS experiences.\nWindows keyboard shortcuts as supported by the Slim X1 bluetooth keyboard\n(Links do not imply endorsement or encouragement.)\n","categories":"","description":"Microsoft Windows tips and administration help.","excerpt":"Microsoft Windows tips and administration help.","ref":"/tips/windows/","tags":"","title":"Windows and related topics"},{"body":"More about the site ","categories":"","description":"","excerpt":"More about the site ","ref":"/about/","tags":"","title":"About the Site"},{"body":" “In this world, there are only two tragedies.\nOne is not getting what one wants, and the other is getting it.\nThe last is much the worst, the last is the real tragedy!”\n– Mr. Dumby, “Lady Windermere’s Fan: A Play About a Good Woman”, by Oscar Wilde (1892)\nRecent updates 16 August 2025: Added Vale introduction \u0026 quickstart to Docs.\n9 August 2025 - Summer cleaning update:\nReworked templates to present index pages more clearly. Updated individual index pages to reflect new generation process. Assorted template fixes \u0026 visual tweaks. Reviewed and polished several recent articles. Additional cleanup and publication prep. 7 June 2025: Added Readability scores to Docs.\n13 January 2025: Added a few more recipes.\n2024 Updates 25 December 2024: Added Yule Kitty legend\n28 November 2024: Add my low-sugar pumpkin pie recipe\n15 October 2024:\nAdded A question of integrity thought Added GROW Process article 12 September 2024: Added autocomplete note to HTML\n10 September 2024: Added customize theme to Hugo\n15 August 2024: Added mistaken presumptions thought\n29 July 2024: Minor changes \u0026 edits\n15 July 2024:\nNew thought: Bingo card redux Minor updates to the Mac tips New thought: Six week progress report Moved Node.js and the doc tools content to new locations to simplify navigation Internal: new article research and prep Minor edits \u0026 updates (RL has been a bit chaotic) 12 June 2024: Assorted odds and ends\nNew thought: Is Phoenix on your bingo card? New thought: Success qualities for tech writers Added two new sections to Scribbles: Thoughts, an infrequently-updated collection of musings, opinions, and other blog posts. Trifles, a collection of amusements, ephemera, and assorted curiosities. Added new tips to the Markdown section. Continued working to automate and improve the publishing pipeline. Other minor updates, fixes, and tweaks. 8 Jun 2024: More quality improvements\nAdded new CSS article: List item indents. Internal: Updated breadcrumb partial to hide breadcrumbs on individual pages. (Note to self: see content/_index.md for sample use.) Internal: Updated breadcrumb separators Fixed a problem with redirects leading to 404 errors, along with a few outdated links. The 404 handler has been customized. Resolved issues with external search (🤞). Additional tweaks and fixes. 3 Jun 2024: Quality updates\nThe sidebar now shows expand and collapse markers. A broken link on the home page has been fixed. (Sorry.) Minor functionality improvements to the home page. Fixed spacing issues for lists with nested paragraphs. Minor formatting changes/fixes throughout the site. 23 May 2024: New articles and other improvements\nThe landing page has been tweaked to help discoverability. Initial articles have been added to the HTML and CSS sections (more soon). An article with Pandoc conversion tips has been added. Minor edits and fixes. 17 May 2025: Minor style fixes \u0026 new content\nDOC-11: Fixed legibility issues with code blocks in dark mode. Minor updates to the Hugo section. Other style tweaks and cleanup. 15 May 2024: More cleanup and some new content\nAdded package manager reference to Unix section Added common console commands to Git section. Added a new section for apps. Started adding content to Node.js section. DOC-15: Verified redirects for old article URLs. DOC-14: Finished migrating earlier articles. Minor customizations and cleanup (more typos, go fig.) 13 May 2024: Migration review \u0026 cleanup\nMany typos fixed. (Many typos.) Added Style guides to Docs section. Added Email privacy error to Git section. Add post describing the Initial migration experience to Scribbles 10 May 2024: Site migrated to new look \u0026 layout.\n7 May 2024: Internal preview and progress sync\n1 May 2024: Begin converting the site to Hugo.\nSeveral driving reasons, including:\nCreate and present a more professional portfolio of writing samples Share knowledge Simplify site maintenance Experiment with new features/tools Demonstrate technical expertise beyond writing To learn more, see Restarting the engines.\nEarlier changes have been archived.\n","categories":"","description":"Change happens. Here's what's happened here recently.","excerpt":"Change happens. Here's what's happened here recently.","ref":"/about/changelog/","tags":"","title":"Changelog"},{"body":"Here is a list of terms and idioms used on the site.\nPull request (PR) Pull requests (PRs) are groups of changes to be checked in to a git-based repository. While working on a git project, you save changes by commiting them to the project.\nWhen you complete a task or set of related changes, you package them into a pull request so they can be merged into the project.\n","categories":"","description":"","excerpt":"Here is a list of terms and idioms used on the site.\nPull request (PR) …","ref":"/tips/glossary/","tags":"","title":"Glossary"},{"body":"I originally planned this post as part of a “spring cleaning” project started with the best of intentions.\nI grabbed my keyboard, fired up the editor, and started putting ideas into markup. And then I needed to verify a few things. Ran into a few false start roadblocks. Started chasing side thoughts. Tried following up new questions.\nSo many grand ideas and plans. Heh.\nThings took longer than I thought they would. Some internals were more complicated than I imagined. And, of course, I had other things demanding my attention.\nI am happy to report that the spring summer cleaning update has been rolled out.\nChanges include:\nIndex page generation has been reworked. Current behavior is closer to my original vision. (It’s still not quite as flexible as I would like, so I’ll keep refining things in the background.)\nA few key CSS glitches have been ironed out.\nMore articles have been added.\nLots of typos have been fixed. (More have likely been introduced. Le sigh)\nThe site remains a work-in-progress, but I think there’s been progress.\nYou may be wondering about the areas of coverage. Do I plan to cover X technology? What about Y?\nShort answer: Yes. I am working on a few content areas behind the scenes.\nAnyway, here’s where things are today. Please take a look and let me know what you think.\n","categories":"","description":"A brief update about recent changes.","excerpt":"A brief update about recent changes.","ref":"/scribbles/journal/summer-cleaning-update/","tags":"","title":"Summer cleaning update"},{"body":"I like scrambled eggs to be soft and fluffy. Unfortunately, they’re not as easy as I originally thought they’d be.\nTurns out, the secret ingredient is dairy, specifically cottage cheese.\nIngredients 2-3 large eggs a healthy splash of milk [~1 tablespoon (tbsp)] a small handful of shredded cheese [~2 ounces (oz)] a dollop of cottage cheese [~1 teaspoon (tsp)] The measurements are approximate and should vary according to taste \u0026 preferences.\nPreparation Combine and whisk ingredients in a bowl until fully blended into a consistent color \u0026 texture. Pour mixture into a saucepan. Cook at medium to low heat (depending on stove). As eggs cook, use a soft spatula to keep them from sticking to the pan. Eggs are ready when fully cooked.\nAdd small handfuls of shredded cheese to absorb excessive moisture.\nSeason to taste and then serve.\nBackstory When I was younger, my grandmother frequently took me to a local diner. (She often felt I didn’t get enough to eat.) It was one of those hole-in-the-wall places with a cook and a single waitress. The cook was a large man, a former Navy cook. His white apron and hat were rumpled and worn. He approached short order recipes with a utilitarian flair.\nOne time, I ordered scrambled eggs. Unfortunately, they arrived flat and rubbery.\nI ate them, but determined to learn how to make them the way I preferred.\nThis proved to be more complicated than expected. It became a sort of personal quest.\nEarly on, I tried to manage temperature and timing, looking for that precise moment when they were perfect. It was a delicate balance, one that risked undercooking the eggs.\nWhile this worked (kinda), it was hard to do exactly right, especially when children were around.\nEventually, I learned that cottage cheese adds that extra, almost magical touch, one that makes the dish easy to make and explain. (Convincing a skeptical seven year old is an exercise left for the reader. I figured it out. You can, too.)\nIt’s not the healthiest recipe on the planet, but it sure is tasty.\nVital statistics First post: 9 Jan 2025 ","categories":"","description":"My trick for making fluffy scrambled eggs.","excerpt":"My trick for making fluffy scrambled eggs.","ref":"/scribbles/trifles/cooking/fluffy-scrambled-eggs/","tags":"","title":"Fluffy scrambled eggs"},{"body":"The following recipe is adapted from one commonly seen on US grocery shelves.\nI adapted it to my flavor preferences and to better align to certain dietary restrictions. The pumpkin flavor is more obvious and it’s less sweet than the original.\nThe goal was to make a holiday dessert suitable for low sodium and low sugar diets.\nIngredients ~16 ounces (oz) pureed pumpkin (organic preferred) 12 fluid oz evaporated milk (use low fat to reduce saturated fat) 1/2 cup monk fruit (or alternate) sweetener (crystals preferred) 6 tablespoons (tbsp) egg whites (equivalent to two large eggs) 2 teaspoon (tsp) ground cinnamon 1 tsp ground ginger 1/4 tsp ground cloves (optional) 1 pie shell (walnut or pecan for best nutrition) Preparation Blend dry ingredients in a small bowl, mixing to a consistent shade of color.\nMix pumpkin, eggs, milk, and dry ingredients and blend to a consistent texture.\nPour mixture into pie shell. Avoid overfilling.\nBake in preheated oven at 350 degrees Fahrenheit (175 Celsius).\nCooking time takes between 45-60 minutes and depends on your oven. You’ll want to keep an eye on things.\nInsert a toothpick in the center of the pie and then remove it; if it comes out clean, the pie is done.\nLet the pie cool before serving.\nSome versions of the recipe ask you to cook the pie at 425 degrees (220 celsius) for 15 minutes and then reduce heat to 350. I’ve tried this, but not seen a material impact on the result.\nExcess pumpkin can be discarded or baked into a pudding. For the latter, pour into a ceramic bowl and then bake along with pie. The smaller amount doesn’t need as much cooking time; I usually put it in the oven at about the halfway mark.\nIngredient changes attempt a healthier treat. Egg whites significantly reduce cholesterol. The use of monk fruit sweetener and a nut-based pie shell make the dessert more friendly to low-sugar diets.\nYou’ll want to filter my ingredient choices through your own knowledge and sources. I am not a trained nutritionist, so take my changes with *ahem* a grain of salt (perhaps one of the ones specifically left out of the pie).\nMy family likes it, so I thought I’d share.\nVital statistics First post: 28 Nov 2024 ","categories":"","description":"My version of a well-known pumpkin pie recipe, tweaked to balance sweetness against flavor.  Supports low sugar diets.","excerpt":"My version of a well-known pumpkin pie recipe, tweaked to balance …","ref":"/scribbles/trifles/cooking/pumpkin-pie-recipe/","tags":"","title":"Pumpkin pie recipe"},{"body":"During a job interview, I was asked to provide an example of integrity.\nThe question caught me off-guard; it wasn’t one I’d planned for.\nAn example popped into my head, but I hesitated to present it.\nMy youngest daughter grew up with a co-parenting arrangement. Her mother and I were supposed to collaborate on major decisions and find common ground.\nIn practice, the arrangement was, well, one-sided. I often found that decisions were made without my input. I was not proactively informed about important needs or events. Frequently, my daughter had to tell me about things I needed to do, but wasn’t allowed to do so until our next weekend together.\nObviously, this was very frustrating. It complicated things. There was… unnecessary anxiety and chaos.\nYet… No matter how frustrated I got, I made sure to never express that around my daughter. When she was around, I focused on her needs and her feelings. We dealt with whatever we needed to. I responded to each challenge as best as I could. Throughout, I encouraged her to have the best possible relationship she could have with all of her parents.\nWhen she spoke enthusiastically about activities with her other family, I listened attentively and spoke encouragingly. I focused on what she needed and tried to stay in the active moment.\nWhen she was older and began to ask tough questions, I kept returning to the theme of the best possible relationship. I respected her questions and tried to frame my answers through the lens of her understanding.\nI tried to show her that was perfectly OK for her to have a different relationship with her mother than I did. I listened to my daughter’s ideas and tried to adjust when it made sense to do so.\nI did my best to acknowledge and validate her opinions, even when we disagreed. I tried to make it OK to see things differently.\nI made many mistakes as a parent. We all do. Yet, in this, I think I did fairly well.\nThroughout, I tried to love her unconditionally; that is, without condition. I tried to accept and respect her feelings, her ideas, and her needs–often at the expense of my own. Moreover, I tried to let my actions show the truth of my intentions.\nThese were not always easy things to do or to say. Yet no matter what I felt, I tried to support her, sticking to the theme of the best possible relationship.\nThis is a personal story (rather than a professional accomplishment). Yet, it shows how I personally define integrity. More to the point, it shows how that definition influences my actions, even when challenged (sometimes on a daily basis).\nTo me, you have to walk the talk. Lead by example. Show, rather than tell.\nFor more than 15 years, I routinely put my daughter’s needs ahead of my own. I did what was necessary to support her–and did so without criticizing her mother.\nThe result? Today, I have a good relationship with my daughter. We talk openly about our challenges, our fears, our feelings, and our views. She shares things with me she doesn’t share with her other family. We don’t always see eye-to-eye, but we love each other. We each have the other’s back. She trusts me. And that’s something I treasure.\n","categories":"","description":"Integrity has many facets; not all are obvious.","excerpt":"Integrity has many facets; not all are obvious.","ref":"/scribbles/thoughts/integrity-question/","tags":"","title":"A question of integrity"},{"body":"Humans like to identify and leverage patterns. We use history to learn how things worked. We presume that previous outcomes predict future behavior.\nSometimes, the observed pattern fails. You move forward with your presumption and it turns out to be invalid. In some cases, it’s flat out wrong and ultimately takes you in the opposite direction.\nHere’s an example: many people are more receptive when addressed by their first name. More than one marketing professional has opened a cold contact with a variation of “Hi John. You don’t know me, but I’m…” And you know what? A lot of people respond well when approached in this way.\nAs an assumption, it’s not bad. It scales to most of the population and is relatively consistent. It works, which is why people do it.\nIt’s not universal, however. Here’s a simple counterexample: I don’t use my birth name in everyday activities. It only appears in official documents, such as my passport, my birth certificate, and so on. It’s a name I use only for formal occasions (and, even then, only as part of my full name).\nMy birth name is the same as my father’s. Growing up, I used my middle name. It’s become habit and, as such, it’s an intrinsic part of my personal identity. In my mind, my birth name belonged to my father. It was an intrinsic part of his identity. My father was a different person than I am.\nMany people have complicated relationships with their parents; I’m no exception. Consequently, when someone greets me using his name, it creates friction. It’s fingernails on a chalkboard. It complicates the introduction. Instead of lowering barriers, it raises them.\nFor one thing, it tells me that the person is a stranger, one presuming familiarity based on materials likely obtained without my explicit knowledge or consent.\n(Parenthetically, I should mention that email addressed to my father is typically and cheerfully flagged as spam and then deleted unread.)\nGiven the previously observed pattern, it should be OK for someone to approach me using those details. Except it’s not. I don’t like it. It lands poorly. Instead of making a good impression, it raises my defenses.\nWith me, the relatively consistent presumption fails. The person leveraging the pattern finds it doesn’t fit all cases.\nThe success of that communication hinges on what happens next.\nMistakes happen, often unpredictably. Some people drive forward, as if the mistake isn’t important in the grand scheme. And perhaps they’re right. Perhaps it is no big deal to the Universe writ large.\nTo me, though, it’s a very big deal. I want to be seen and treated as an individual, not a statistic. I am a person, not a number or a transaction.\nOthers apologize, refocus, and start over. The most successful ones ask and then respect my preferences.\nYou can see where I’m going with this, right?\nWe’re human and we make mistakes. Sometimes, the best available information isn’t good enough and we end up on our heels.\nIf we approach mistakes with honesty, humility, and integrity, they become stumbles that can be overcome.\nOn the other hand, if we’re arrogant or dismissive of someone else’s concerns, the roadblock becomes more complicated.\nFor if you do not appreciate and respect my concerns, desires, or wishes, then why would you expect me to do the same?\nIf you cannot respect and treat me as an individual, why would I bother trying to return the favor?\nKindness and respect cost nothing, except a bit of time and attention to detail. #FoodForThought\nVital statistics First post: 15 August 2024 ","categories":"","description":"Presume cautiously, with humility and respect.","excerpt":"Presume cautiously, with humility and respect.","ref":"/scribbles/thoughts/mistaken-presumptions/","tags":"","title":"Beware mistaken presumptions"},{"body":"So…a couple of weeks ago, I posted about a family event that unexpectedly upended my work schedule. It was a positive event (child birth), one that got me thinking about work/life balance, integrity, personal priorities, and so on.\nLast Friday, I received another reminder of such things: my wife’s oldest had been in a serious car accident and her prognosis was, at that time, unknown. (She’s got a long, painful recovery ahead of her, but she survived.)\nMy wife immediately packed a bag and headed for the hospital (a few hours away).\nMy oldest grandchild also started driving to the hospital. While she was on her way, her boyfriend was involved in a separate car accident and severely hurt. My granddaughter had originally planned to be in the same car at the same time. Had that happened, it’s highly unlikely she would have survived.\nThus, we very nearly had a double tragedy in short order.\nThat’s given me much to think about over the past few days.\nI know it’s not pleasant to think about personal issues, especially when you’re focused on work or technical issues. Yet, life events happen. We can’t ignore them just because they’re hard or make us uncomfortable. My family may have avoided the double tragedy, but many don’t.\nPeople we know and respect deal with such things on a regular basis. We often don’t even realize the things going on outside of our current project.\nI stand behind my earlier post: Life is short. It’s over before you know it.\nDo things when they need to be done. Say what needs to be said when it needs to be said; otherwise, you may not have the opportunity. If you feel the impulse to say something nice, do so. If you feel gratitude, express it. If you need something, ask for it. Comfort. Engage. Interact.\nThe only way things get better is if we’re active… and proactive… in making them better. Get involved.\nThat’s my take and I’m not going to apologize for it.\n","categories":"","description":"Not all random events are tragic, but some encourage further reflection.","excerpt":"Not all random events are tragic, but some encourage further …","ref":"/scribbles/thoughts/bingo-card-redux/","tags":"","title":"Bingo card redux"},{"body":"It’s been several weeks since I began reimplementing the website. It’s been an interesting experience to say the least. It’s fun to create something new and watch it come together. It’s also a little aggravating to find things that slipped through and need to be cleaned up. It’s also educational to overcome bits of friction to create a better experience.\nPerhaps it’s time to take stock.\nWhat’s gone well? Well, here’s a high-level look at the recent changes:\nMigrated the site to a new stack (changing from MKDocs to Hugo) Learned (and adapted) a new template (Docsy) Tweaked and fixed a few layout choices Added navigation improvements Rewritten several topics to reflect my current style (while adding new topics) Fixed a number of (relatively) minor CSS bugs/choices None of these tasks have been unexpected.\nSome have been trivial; others have required a bit of investigation, experimentation, and patience. (All good qualities to bring to any migration.)\nTo be honest, I’ve been a bit surprised that things haven’t been more difficult. Yes, there have been a few missteps and glitches. However, most things have been relatively easy to take care.\nI actually feel good enough about the site to show it to others for their feedback. (And, yes, that’s an improvement over the previous design.)\nThe site was originally created to share writing samples with prospective employers. Now that there’s a solid foundation, I’ve been able to expand scope beyond a few curated topics. Now, you can get a sense of my design thinking, my organizational approaches, and even a bit of my personality.\nWhat could have gone better?\nSome problems might’ve been avoided with more mindful planning and more rigorous testing. (This seems a bit speculative and/or obvious.)\nI think overall progress has been good, especially when factoring in competing demands: family concerns, unplanned travel, and other challenges.\nIt’s tempting to wonder if I’ve used my time as wisely as I could have. (Again, this seems speculative.) I suppose the most honest answer is “Maybe…?” Time value depends on perspective. And I try to prioritize the most important things in each moment. You’re free to disagree with my choices, if you like.\nArmchair quarterbacking aside, I’m not sure there have been many major issues. Yes, broken links should have been noticed during unit review. And, yes, some of my initial organizational ideas haven’t been as successful as I’d hoped.\nHowever, these seem like natural artifacts of the agile development process. We do what we can in the time available and then we iterate to improve things over time. Whatever missteps I’ve made, things have clearly improved.\nI think the new foundation enables a number of possibilities that weren’t feasible with the earlier design.\nI will say this: I feel more engaged with the site…and more motivated to continue improving it. Perhaps that’s the best benefit of all.\nLet’s see what happens, shall we?\n","categories":"","description":"Let's see how things are going.","excerpt":"Let's see how things are going.","ref":"/scribbles/journal/six-week-progress/","tags":"","title":"Six week progress report"},{"body":"When I woke up this morning, I did not have “Visit Phoenix, Arizona” on my bingo card. Especially this close to Summer, when temperatures are over 100 degrees F.\nNo, I had “drink coffee,” “play with cats,” “work on my site,” “meet with team members,” and so on.\nAt 9:50 am, a text: “Water just broke.”\nI immediately booked a flight, packed a bag, and flew to Phoenix to be near my daughter and her husband for the birth of their first child.\nWe know the tech world changes rapidly: directions change, requirements change, schedules change, and (of course) lives change.\nOne moment, you’re working on a ticket and then suddenly you learn your role has been eliminated.\nOne moment, you’re trying to figure out your workday. In the next, you’re planning a quick trip into the high desert.\nOne moment, you’re trying to solve a thorny problem and the next thing you know, you’re in the hospital getting an EKG.\nIt’s cliche to say that “Change happens,” but that doesn’t change the simple reality that change really is the only constant.\nWe talk a lot about “work/life balance.” And it’s really easy to get caught up in the corporate drama.\nDon’t lose sight of the real moments in life. In a few years, which will you remember most? The temporary success of some business objective…or the family member you supported when they needed you? Which will you value most? Seems like an easy answer to me.\nIf you’re in an environment where family is not the easy answer, get out. ASAP. Find a role where families are factored into the priorities, no matter what. Find leadership that tells you to do whatever you need in order to protect and care for your own.\nYes, there are times when you need to make a tough call. But family should always be an easy call. Especially in the unexpected moments of change and import.\nA lot of companies claim integrity as a corporate value. The truth of that commitment is revealed in the behavior of their leaders and managers.\nIf they don’t walk the talk, especially when it’s hard, they don’t have integrity. They don’t have your back…and they shouldn’t benefit from your time, energy, passion, or creativity.\nThat’s my take. Your mileage may vary.\nVital statistics First post: 11 June 2024 ","categories":"","description":"What does Phoenix, Arizona have to do with bingo cards?","excerpt":"What does Phoenix, Arizona have to do with bingo cards?","ref":"/scribbles/thoughts/phoenix-bingo-card/","tags":"","title":"Is Phoenix on your bingo card?"},{"body":"A few years ago, I interviewed for a tech writing role.\nWhile chatting with two team members and their manager, I asked, “What single quality would help someone succeed in this role?”\n(I like asking this question in interviews because it’s not one many people plan for. The answers are often unscripted and can lead to unexpected points of clarity.)\nEveryone thought for a moment before replying.\nThe teammates said, respectively: Curiosity and Humility.\nThe manager said, “Kindness, which is different than Being Nice.”\nI really liked those answers; I felt them resonate.\nI didn’t get that particular role, but I learned something. I value the experience.\nCompassionate tech values At about the same time, I coincidentally ran across April Wensel’s Compassionate tech values:\nHumility \u003e Ego Inclusion \u003e Elitism Cooperation \u003e Competition Learning \u003e Being smart Being a mentor \u003e Being a “rockstar” Again, these resonated.\nThey continue to resonate, especially when I find myself in environments that, um…, lean into other values.\nI try to hold myself accountable by reminding myself of the values that resonate within me.\nYour mileage may vary.\nVital statistics First post: 10 June 2024 ","categories":"","description":"A few qualities worth further meditation","excerpt":"A few qualities worth further meditation","ref":"/scribbles/thoughts/success-qualities/","tags":"","title":"Qualities for successful tech writers"},{"body":"The site has been been updated to a new look. It has more content and a more professional pipeline.\nI have to admit that I was a little worried when starting the migration process, even though I’ve been working with (or near) the new toolset for some time.\nPart of my nervousness stems from earlier experiences, which have included some rather…dramatic results.\nNo matter how well you plan, something always seems to go sideways. And, truth be told, there were a couple of glitches along the way. (Fortunately, I noticed and resolved things quickly.)\nThe new site is built using Hugo in conjunction with the Docsy theme. It’s deployed using Github pages, which should be fine for the amount of traffic I get. (I do have a scaling plan in case things blow up, but I highly doubt that’s going to happen.)\nContent is maintained in a private repo and updates are synchronized to a public repo. (I plan to write a couple of articles walking through the process.)\nThis approach and architecture is meant to show what you can accomplish with minimal investment. Except for domain registration, the site currently relies on free services.\nA number of companies take similar approaches for their docs. Microsoft, for example, maintains private and public repos for Microsoft Learn, their doc site. They get the benefit of public contributions while securing product release plans until they’re ready to be unveiled.\nSo how long did this makeover take? Roughly ten days from start to finish:\nA prototype was “publishable” in three days.\nGranted, I wouldn’t have wanted to publish that version, but I could have if pressed.\nThe following week was spent testing, tweaking, and refining.\nThis included reworking previous articles, adding support material, and writing new articles.\nThe actual site migration took about 30 minutes overall.\nTiming started with adding a notice to the previous version of the site, just in case things went terribly wrong.\nI considered migration complete when the public URLs were updated.\nMigration was handled carefully. Each step was tested and verified.\nThis helped identify a few issues and I’ve filed tickets accordingly. (Yes, I have a private Jira project to track work for the site.)\nI think the new site works at least as well as the earlier one. That may seem like a modest win (table stakes, some would say). And, yet…how many times have we seen larger projects stumble because of less attention to detail?\nSo here we are. Is the site everything I imagined? Not entirely. But, I think it is an improvement and it sets a solid foundation for additional work.\nWith luck, the next major update will happen within days. And, with more luck (and diligence), that will only be the beginning.\nQapla'!\n","categories":"","description":"The site has been updated.  Let's take stock.\n","excerpt":"The site has been updated.  Let's take stock.\n","ref":"/scribbles/journal/initial-migration/","tags":"","title":"Initial migration complete"},{"body":"Welcome back to the ongoing work-in-progress. I’m blowing off the dust, sweeping away the cobwebs, and setting up new things.\nThis site serves as a practical portfolio and personal knowledgebase. It provides writing samples and illustrates my approach to technical writing. It also shares knowledge and lessons learned during my technical adventures.\nI hope the content is engaging, practical, and has at least a bit of value. (I’m still trying to chase down the various typos, so you’ll have to forgive a few rough edges.)\nThe initial version of the site was built using MKDocs, a static site generator used to create websites from Markdown.\nThe new version uses Hugo, which I find to be a bit more capable and extensible than MkDocs. (That’s a personal opinion; your mileage may vary.)\nThis post marks the beginning of the new journey. I’m using this to learn a new theme and to refine my technical skills/knowledge.\nInitially, I plan to mine my personal notes for content. I’m also working on backend improvements to improve discoverability, reduce maintenance, and so on.\nFuture posts will discuss various aspects of the process. For now, I’m working on the general site structure and initial content.\nThanks for joining me on this journey. Hail and well met!\n","categories":"","description":"A new version is afoot; here are the whats, whys, and wherefores.","excerpt":"A new version is afoot; here are the whats, whys, and wherefores.","ref":"/scribbles/journal/restart-engines/","tags":"","title":"Restart the engines"},{"body":"Choose your greeting:\nHail and well met! Greetings, lifeform. Goooood Eeeeevvvening. Hello troubleshooter. Buh-doop beep? BLAAAT! Oh. It’s you. It’s been a looong time. How’ve you been? After many promises, multiple unfinished prototypes, and much pondering, it’s finally online. The site, I mean.\nHere, you’ll find technical articles and posts related to things I’m working on, lessons I’ve learned, solutions I’ve found, and other thoughts I thought worth sharing.\nFeel free to browse, but I do ask that shenanigans be kept to a minimum…unless, of course, I’m allowed to be rambunctious as well. In that event, well, it’s off to the races… (off to the races…)\nSee About for the rules (such as they are).\nThings are a bit sparse at the moment, but that’s because I’m still pulling things together.\nFor the near future, I’m keeping it simple. Eventually, I’ll need to complicate things a bit, but hopefully not too much.\nIn Scribbles, I generally follow a light, bloggy style…except when I don’t.\nFormal articles appear in Tips. Yes, there’s a marked style difference, by design. Navigation shortcuts, search, and other traditional features are being added over time.\nComments are not currently enabled, so you’ll need to provide feedback via one of the contact points on the About page. All well-intentioned feedback is appreciated.\nIf you find anything useful, feel free to share and enjoy (share and enjoy). Please give credit where credit is due. You may not pinch and poach. If something’s useful, cite where you found it.\nIf you feel I’ve not cited things correctly, let me know so I can take appropriate action.\nThings are a bit of a mess at the moment, but the style will settle down and start telling you things you need to know. I hope.\n","categories":"","description":"Hello, welcome!  Choose your greeting and learn what's going on.","excerpt":"Hello, welcome!  Choose your greeting and learn what's going on.","ref":"/scribbles/journal/first-post/","tags":"","title":"First post: Don't panic"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":" 🧩 Tips Now includes tips for: CSS Docs Git HTML Markdown MKDocs Hugo JavaScript Mac Node.js Office apps Pandoc Unix Windows More soon!\n📘 Scribbles Scribbles are posts with news, commentary, \u0026 other random thoughts. Recently posted:\n16 August 25: Vale intro \u0026 quickstart 9 August 25: Summer cleaning update 7 June 25: Readability scores Jan - Feb 2025: Assorted specialized recipes 25 December 2024: The legend of the Yule Kitty Also, see: About and Changelog ","categories":"","description":"A personal portfolio and technical resource","excerpt":"A personal portfolio and technical resource","ref":"/","tags":"","title":"Lance's Quips \u0026 Quibbles"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"Odds \u0026 ends “The Pleasures and Pains of Coffee,” by Honoré de Balzac Zen Pencils - Isaac Asimov: A lifetime of learning (among others) Steampunk Curse Generator, via Lori Alden’s Brassbright Chronicle. Like everything else on the site, they’re provided as-is.\nYour interest will likely vary, based on who you are and what you’re into.\nVital statistics First post: 10 June 2024 ","categories":"","description":"","excerpt":"Odds \u0026 ends “The Pleasures and Pains of Coffee,” by Honoré de Balzac …","ref":"/scribbles/trifles/","tags":"","title":"Trifles and Tidbits"}]